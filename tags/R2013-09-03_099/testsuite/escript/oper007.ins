0: decl local #0
1: #
2: decl local #1
3: array
4: local #0
5: init{}
6: struct
7: init{}
8: dictionary
9: init{}
10: array
11: init{}
12: ""
13: init{}
14: 1L
15: init{}
16: 1LF
17: init{}
18: :=
19: #
20: local #1
21: initforeach @191
22: local #1
23: initforeach @189
24: local #2
25: !
26: Func(1,0): Print
27: #
28: local #2
29: ~
30: Func(1,0): Print
31: #
32: local #2
33: unary -
34: Func(1,0): Print
35: #
36: local #2
37: Func(1,0): Print
38: #
39: local #2
40: local #5
41: *
42: Func(1,0): Print
43: #
44: local #5
45: local #2
46: *
47: Func(1,0): Print
48: #
49: local #2
50: local #5
51: /
52: Func(1,0): Print
53: #
54: local #5
55: local #2
56: /
57: Func(1,0): Print
58: #
59: local #2
60: local #5
61: +
62: Func(1,0): Print
63: #
64: local #5
65: local #2
66: +
67: Func(1,0): Print
68: #
69: local #2
70: local #5
71: -
72: Func(1,0): Print
73: #
74: local #5
75: local #2
76: -
77: Func(1,0): Print
78: #
79: local #2
80: local #5
81: %
82: Func(1,0): Print
83: #
84: local #5
85: local #2
86: %
87: Func(1,0): Print
88: #
89: local #2
90: local #5
91: &
92: Func(1,0): Print
93: #
94: local #5
95: local #2
96: &
97: Func(1,0): Print
98: #
99: local #2
100: local #5
101: ^
102: Func(1,0): Print
103: #
104: local #5
105: local #2
106: ^
107: Func(1,0): Print
108: #
109: local #2
110: local #5
111: |
112: Func(1,0): Print
113: #
114: local #5
115: local #2
116: |
117: Func(1,0): Print
118: #
119: local #2
120: local #5
121: >>
122: Func(1,0): Print
123: #
124: local #5
125: local #2
126: >>
127: Func(1,0): Print
128: #
129: local #2
130: local #5
131: <<
132: Func(1,0): Print
133: #
134: local #5
135: local #2
136: <<
137: Func(1,0): Print
138: #
139: local #2
140: local #5
141: makelocal
142: jmp userfunc @240
143: #
144: local #5
145: local #2
146: makelocal
147: jmp userfunc @240
148: #
149: local #2
150: local #5
151: makelocal
152: jmp userfunc @210
153: #
154: local #5
155: local #2
156: makelocal
157: jmp userfunc @210
158: #
159: local #2
160: local #5
161: makelocal
162: jmp userfunc @255
163: #
164: local #5
165: local #2
166: makelocal
167: jmp userfunc @255
168: #
169: local #2
170: local #5
171: makelocal
172: jmp userfunc @195
173: #
174: local #5
175: local #2
176: makelocal
177: jmp userfunc @195
178: #
179: local #2
180: local #5
181: makelocal
182: jmp userfunc @225
183: #
184: local #5
185: local #2
186: makelocal
187: jmp userfunc @225
188: #
189: stepforeach @24
190: leave block(3)
191: stepforeach @22
192: leave block(3)
193: leave block(2)
194: progend
195: pop param 't2'
196: pop param 't1'
197: decl local #2
198: local #1
199: :=
200: #
201: local #2
202: local #0
203: /=
204: #
205: local #2
206: Func(1,0): Print
207: #
208: 0L
209: return
210: pop param 't2'
211: pop param 't1'
212: decl local #2
213: local #1
214: :=
215: #
216: local #2
217: local #0
218: -=
219: #
220: local #2
221: Func(1,0): Print
222: #
223: 0L
224: return
225: pop param 't2'
226: pop param 't1'
227: decl local #2
228: local #1
229: :=
230: #
231: local #2
232: local #0
233: %=
234: #
235: local #2
236: Func(1,0): Print
237: #
238: 0L
239: return
240: pop param 't2'
241: pop param 't1'
242: decl local #2
243: local #1
244: :=
245: #
246: local #2
247: local #0
248: +=
249: #
250: local #2
251: Func(1,0): Print
252: #
253: 0L
254: return
255: pop param 't2'
256: pop param 't1'
257: decl local #2
258: local #1
259: :=
260: #
261: local #2
262: local #0
263: *=
264: #
265: local #2
266: Func(1,0): Print
267: #
268: 0L
269: return
