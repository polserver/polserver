import urllib.request
import zipfile
import io
import os
import shutil

url = 'https://github.com/polserver/BareDistro/archive/master.zip'
r = urllib.request.urlopen(url)
filedir=os.path.dirname(__file__)
if filedir:
    os.chdir(filedir)
with zipfile.ZipFile(io.BytesIO(r.read())) as zipObj:
      zipObj.extractall()

archivedir="BareDistro-master"
with open("baredistrofiles.cpp","w" ) as f:
    f.write('''
// autogenerated
#include "baredistro.h"

#include <utility>

namespace Pol
{
namespace PolTool
{
void BareDistro::distro_files( std::map<fs::path, std::vector<std::string>>& distro )
{
''')
    for root, dirs, files in os.walk(archivedir):
        for file in files:
            if file.startswith('.'):
                continue
            f.write('  distro.emplace( "{}",\n'.format(
                os.path.join(os.path.relpath(root, archivedir), file)))
            f.write('                  std::initializer_list<std::string>( {\n')
            with open(os.path.join(root, file),'r') as df:
                for line in df.readlines():
                    f.write('"{}",\n'.format(line.rstrip().replace('"', r'\"')))
            f.write('                  } ) );\n\n')

    f.write('''
}
}  // namespace PolTool
}  // namespace Pol
''')

shutil.rmtree(archivedir)
