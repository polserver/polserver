name: Build MacOS

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: "macos-latest"
            cxx-compiler: clang++
            c-compiler: clang
            compiler-version: default
            build-type: Release

          - os: "macos-latest"
            cxx-compiler: g++
            c-compiler: gcc
            compiler-version: 9
            build-type: RelWithDebInfo

    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
      - name: Cache curl
        uses: actions/cache@v2
        with:
          path: lib/curl-7.57.0
          key: ${{ runner.os }}-${{ matrix.config.cxx-compiler }}-${{ matrix.config.compiler-version }}-c++17-buildtype-curl-7.57.0
      - name: Cache antlr
        uses: actions/cache@v2
        with:
          path: lib/antlr
          key: ${{ runner.os }}-${{ matrix.config.cxx-compiler }}-${{ matrix.config.compiler-version }}-antlr-buildtypefix
      - name: Cache boost
        uses: actions/cache@v2
        with:
          path: lib/boost_1_74_0
          key: ${{ runner.os }}-${{ matrix.config.cxx-compiler }}-${{ matrix.config.compiler-version }}-boost-buildtypefix
      - name: Install Dependencies
        shell: pwsh
        run: |
          brew install pkg-config
          brew reinstall openssl@1.1
          brew install ninja openssl@1.1 glib-openssl mysql-client mysql-connector-c++
          echo "PKG_CONFIG_PATH=/usr/local/opt/openssl@1.1/lib/pkgconfig:/usr/local/opt/mysql-client/lib/pkgconfig:$Env:PKG_CONFIG_PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Set CXX and CC
        shell: pwsh
        run: |
          $cxx_compiler = '${{ matrix.config.cxx-compiler }}'
          $c_compiler = '${{ matrix.config.c-compiler }}'
          $version = '${{ matrix.config.compiler-version }}'

          if ($version -ne 'default') {
            $cxx_compiler = "$cxx_compiler-$version"
            $c_compiler = "$c_compiler-$version"
          }

          echo "CXX=$cxx_compiler" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "CC=$c_compiler" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Config
        run: |
          cd bin-build
          cmake .. -G Ninja -DREUSE_PCH=1 -DCMAKE_BUILD_TYPE=${{ matrix.config.build-type }}
      - name: Build
        run: |
          cd bin-build
          cmake --build . --config ${{ matrix.config.build-type }} -- -j 2

      - name: Test (EScript)
        run: |
          cd bin-build
          cmake --build . --config ${{ matrix.config.build-type }} --target test_escript
      - name: Test (Shard Fixtures)
        run: |
          cd bin-build
          cmake --build . --config ${{ matrix.config.build-type }} --target test_pol_fixture
      - name: Test (UnitTests)
        run: |
          cd bin-build
          cmake --build . --config ${{ matrix.config.build-type }} --target unittest_pol
      - name: Test (Shard)
        run: |
          cd bin-build
          cmake --build . --config ${{ matrix.config.build-type }} --target test_pol_only
      - name: Upload shard test log
        uses: actions/upload-artifact@v1
        with:
          name: Testlog-${{ runner.os }}-${{ matrix.config.cxx-compiler }}
          path: bin-build/coretest/log/pol.log
      - name: Create Artefact
        run: |
          cd bin-build
          cmake --build . --config ${{ matrix.config.build-type }} --target package
          cd ../bin
          mkdir release
          mv *.zip release

      - name: Upload Artefact
        uses: actions/upload-artifact@v1
        with:
          name: Nightly-${{ runner.os }}-${{ matrix.config.cxx-compiler }}
          path: bin/release
 
  notify_on_failure:
    needs: build
    runs-on: "ubuntu-latest"
    if: failure()
    steps:
      - name: Discord notification failure
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: turleypol/actions-status-discord@master
        with:
          status: failure
          job: Building (MacOS)
  notify_on_success:
    needs: build
    runs-on: "ubuntu-latest"
    if: success()
    steps:
      - name: Discord notification success
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: turleypol/actions-status-discord@master
        with:
          status: success
          job: Building (MacOS)
  notify_on_cancel:
    needs: build
    runs-on: "ubuntu-latest"
    if: cancelled()
    steps:
      - name: Discord notification cancelled
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: turleypol/actions-status-discord@master
        with:
          status: cancelled
          job: Building (MacOS)
