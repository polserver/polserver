###
### POL makefile.gcc
###

###
### normal build:
### CC=gcc-3.0 make -f makefile.gcc
###

target: release dynrelease

all: release debug dynrelease dyndebug

# for debugging:
# CXX_OPTS=-ggdb

INC_STLPORT=-I/usr/local/include/stlport
# 
CXX_OPTS=-gstabs+ -DINC_PASSERT=1 -Wall -Werror $(CXX_MORE_OPTS)

CXX_RELEASE_OPTS=$(CXX_OPTS)

CXX_DEBUG_OPTS=$(CXX_OPTS)

CXX_OPTS_NOWARN=-gstabs+ -DINC_PASSERT=1 

VPATH=pol:bscript:clib:ecompile:runecl:gp

sources = \
	account.cpp accounts.cpp acscrobj.cpp allocd.cpp armor.cpp attack.cpp \
	attribute.cpp auxclient.cpp \
	bannedips.cpp boat.cpp boatcomp.cpp boatemod.cpp bowsalut.cpp \
	binaryfilescrobj.cpp \
	cfgemod.cpp cfgrepos.cpp cgdata.cpp charactr.cpp checkpnt.cpp \
	chrcast.cpp \
	chrituse.cpp chrskuse.cpp \
	client.cpp clientio.cpp cliface.cpp cmbtcfg.cpp cmdlevel.cpp \
	containr.cpp corpse.cpp \
	create.cpp \
	cryptengine.cpp \
	crypt/crypt1264.cpp crypt/crypt200.cpp crypt/cryptignt.cpp \
	ctable.cpp \
	datastore.cpp \
	dblclick.cpp decay.cpp dice.cpp door.cpp dropitem.cpp \
	dye.cpp \
	eqpitem.cpp equipdsc.cpp equipmnt.cpp esignal.cpp exscrobj.cpp \
	extcmd.cpp \
	fnsearch.cpp \
	gameclck.cpp getitem.cpp getmsg.cpp gflag.cpp gprepos.cpp guardrgn.cpp\
	guilds.cpp \
	heaven.cpp help.cpp house.cpp \
	iostats.cpp \
	irequest.cpp item.cpp item00.cpp itemcr.cpp itemdesc.cpp \
	listenpt.cpp loadunld.cpp lockable.cpp logfiles.cpp \
	login.cpp los.cpp los2.cpp \
	menu.cpp menuinst.cpp menusel.cpp miscmsg.cpp miscrgn.cpp \
	mkscrobj.cpp \
	movecost.cpp movement.cpp \
	msgfiltr.cpp \
	multicfg.cpp multicr.cpp multidef.cpp multis.cpp musicrgn.cpp \
	npc.cpp npctmpl.cpp \
	pkg.cpp pol.cpp polcfg.cpp polclock.cpp poldbg.cpp polfile1.cpp \
	polsem.cpp \
	polsig.cpp polstats.cpp polsystememod.cpp \
	poltest.cpp polvar.cpp polver.cpp polwww.cpp \
	profile.cpp proplist.cpp \
	readcfg.cpp region.cpp repsys.cpp resource.cpp \
	schedule.cpp scrdef.cpp scrsched.cpp scrstore.cpp \
	skilladv.cpp sngclick.cpp \
	sockio.cpp speech.cpp \
	spelbook.cpp spells.cpp ssopt.cpp startloc.cpp statmsg.cpp storage.cpp \
	syshook.cpp systemhookscript.cpp \
	target.cpp tasks.cpp testenv.cpp textcmd.cpp tildecmd.cpp tiplstwn.cpp \
	tips.cpp \
	tmpvars.cpp tooltips.cpp \
	ucrypto.cpp ufunc.cpp ufunc2.cpp uimport.cpp \
	umap.cpp uobjcnt.cpp uobject.cpp uobjhelp.cpp uoclient.cpp \
	uoemod.cpp uoemod2.cpp uoemod3.cpp uoexhelp.cpp uofile00.cpp \
	uofile01.cpp uofile02.cpp uofile03.cpp uoscrobj.cpp uoskills.cpp \
	useskill.cpp utilemod.cpp uvars.cpp \
	uworld.cpp \
	vital.cpp \
	weapon.cpp \
	xlate.cpp xmain.cpp \
	zone.cpp \
	basicio.cpp basicmod.cpp \
    berror.cpp blong.cpp bstruct.cpp \
    compctx.cpp eprog_read.cpp eprog2.cpp \
	dbl.cpp dict.cpp eprog.cpp escrutil.cpp \
    fmodule.cpp \
	escript_config.cpp \
    escriptv.cpp execmodl.cpp executor.cpp \
	object.cpp ofstrm.cpp \
	objstrm.cpp mathemod.cpp \
	str.cpp symcont.cpp tkn_strm.cpp \
	token.cpp userfunc.cpp \
	cfgfile.cpp cfgsect.cpp dirlist.cpp dualbuf.cpp \
	fileutil.cpp \
    mlog.cpp nlogfile.cpp \
    opnew.cpp passert.cpp \
    rarray.cpp sckutil.cpp \
	strexcpt.cpp strset.cpp strutil.cpp tracebuf.cpp \
    wnsckt.cpp \
	gendef.cpp gphelp.cpp gtree.cpp treegen.cpp \
    endian.c logfile.c fdump.c stracpy.c \
	random.c cmdargs.c

ecompile_sources=ecompile/ecompile.cpp \
	bscript/compiler.cpp bscript/parser.cpp \
	bscript/token.cpp bscript/symcont.cpp \
	bscript/compctx.cpp bscript/tkn_strm.cpp \
	bscript/eprog.cpp bscript/eprog2.cpp bscript/userfunc.cpp \
	bscript/escriptv.cpp bscript/eprog3.cpp \
	bscript/fmodule.cpp bscript/eprog_read.cpp \
	clib/dirlist.cpp clib/fileutil.cpp \
	clib/strutil.cpp clib/rarray.cpp clib/filecont.cpp \
	clib/passert.cpp clib/xmain.cpp \
	clib/strexcpt.cpp 

runecl_sources=runecl/runecl.cpp \
	bscript/executor.cpp bscript/execmodl.cpp bscript/dbl.cpp \
	bscript/basicio.cpp bscript/basicmod.cpp bscript/berror.cpp \
	bscript/blong.cpp bscript/bstruct.cpp bscript/compctx.cpp \
	bscript/dict.cpp bscript/eprog.cpp bscript/eprog2.cpp \
	bscript/eprog3.cpp bscript/eprog_read.cpp bscript/escript_config.cpp \
	bscript/escriptv.cpp bscript/escrutil.cpp bscript/fmodule.cpp \
	bscript/mathemod.cpp bscript/object.cpp bscript/objstrm.cpp \
	bscript/ofstrm.cpp bscript/str.cpp bscript/symcont.cpp \
	bscript/tkn_strm.cpp bscript/token.cpp bscript/userfunc.cpp \
	clib/passert.cpp clib/rarray.cpp clib/strutil.cpp  \
	clib/mlog.cpp  clib/xmain.cpp clib/strexcpt.cpp

ecompile_objects=$(ecompile_sources:.cpp=.o) $(c_sources:.c=.o)

runecl_objects=$(runecl_sources:.cpp=.o) $(c_sources:.c=.o)

objects1 = $(sources:.cpp=.o) $(c_sources:.c=.o)

objects1 =  $(patsubst %.cpp,%.o,$(sources))
objects2 =  $(patsubst %.c,%.o,$(objects1))

objects = $(objects2)
 


objects_debug = $(cpp_sources:.cpp=.debug.o) $(c_sources:.c=.debug.o)

clib_objects = clib/dllist.o clib/logfile.o clib/drarray.o \
	clib/rarray.o clib/endian.o clib/fdump.o \
	clib/stracpy.o

release: bin/pol

bin/pol: $(objects)
	$(CC) $(CXX_OPTS) -static -o bin/pol $(objects) -lpthread -lstdc++ -lm

bin/ecompile: $(ecompile_objects)
	$(CC) $(CXX_OPTS) -static -o bin/ecompile $(ecompile_objects) -lstdc++ -lm

bin/runecl: $(runecl_objects)
	$(CC) $(CXX_OPTS) -static -o bin/runecl $(runecl_objects) -lstdc++ -lm

debug: $(objects_debug)
	$(CC) $(CXX_OPTS) -static -o bin/poldebug $(objects_debug) -lpthread -lstdc++ -lm

dynrelease: $(objects)
	$(CC) $(CXX_OPTS) -o bin/poldynrelease $(objects) -lpthread -lstdc++

dyndebug: $(objects_debug)
	$(CC) $(CXX_OPTS) -o bin/poldyndebug $(objects_debug) -lpthread -lstdc++

all: pol poldyn

clean:
	rm -f $(objects) $(clib_objects)

gzipfile: bin/pol bin/ecompile bin/runecl 
	strip -o dist/pol bin/pol
	strip -o dist/ecompile bin/ecompile
	strip -o dist/runecl bin/runecl
	(cd dist ; tar -cv pol ecompile runecl | gzip >pol-linuxbin-`date +%Y-%m-%d`.tar.gz )

#  $(clib_objects)

clib_library: 
	$(MAKE) -C clib

#include $(c_sources:.c=.d)
#include $(cpp_sources:.cpp=.d)


##
## How to build C sources
##
%.o: %.c
	$(CC) $(CXX_OPTS) -c -I . -o $@ $<

##
## How to build C++ sources
##
%.o: %.cpp
	$(CC) -x c++ $(CXX_RELEASE_OPTS) -c -I. -o $@ $<

%.debug.o: %.cpp
	$(CC) -x c++ $(CXX_DEBUG_OPTS) -c -I. -o $@ $<

pol/crypwrap.o: pol/crypwrap.cpp
	$(CC) -x c++ $(CXX_OPTS_NOWARN) -c -I. -o $@ $<

pol/crypt/crypt1264.o: pol/crypt/crypt1264.cpp
	$(CC) -x c++ $(CXX_OPTS_NOWARN) -c -I. -o $@ $<

pol/crypt/crypt200.o: pol/crypt/crypt200.cpp
	$(CC) -x c++ $(CXX_OPTS_NOWARN) -c -I. -o $@ $<

pol/crypt/cryptignt.o: pol/crypt/cryptignt.cpp
	$(CC) -x c++ $(CXX_OPTS_NOWARN) -c -I. -o $@ $<

pol/crypwrap.debug.o: pol/crypwrap.cpp
	$(CC) -x c++ $(CXX_OPTS_NOWARN) -c -I. -o $@ $<

pol/crypt/crypt1264.debug.o: pol/crypt/crypt1264.cpp
	$(CC) -x c++ $(CXX_OPTS_NOWARN) -c -I. -o $@ $<

pol/crypt/crypt200.debug.o: pol/crypt/crypt200.cpp
	$(CC) -x c++ $(CXX_OPTS_NOWARN) -c -I. -o $@ $<

pol/crypt/cryptignt.debug.o: pol/crypt/cryptignt.cpp
	$(CC) -x c++ $(CXX_OPTS_NOWARN) -c -I. -o $@ $<



%.d: %.cpp
	set -e; $(CC) -x c++ $(CPPFLAGS) -I. -MM $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

%.d: %.c
	set -e; $(CC) $(CPPFLAGS) -I. -MM $< \
	| sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
	[ -s $@ ] || rm -f $@

include $(objects:.o=.d)
