<?xml version='1.0' encoding="iso-8859-1"?>
<?xml-stylesheet type="text/xsl" href="objref.xslt" ?>
<!DOCTYPE ESCRIPT SYSTEM "objref.dtd">
<ESCRIPT>
<!--
	Notes for updating this file (as of 08/31/2015):
	* The almost complete list of object properties that are exposed to scripts is located
	  in pol-core/bscript/parser.cpp, defined as ObjMember object_members[], look for MBR_* constants
	  From there, you have to determine which members are implemented on which objects... DO NOT TRUST THE COMMENTS.
	* The source code doesn't have many comments, but core-changes contains a detailed description for every mod.
	* The objects' properties are then handled in pol-core/pol/uoscrobj.cpp, look for MBR_* constants,
	  every script object then has its own namespace. Sometimes the definitions are straight into the object's
	  main file. Look for methods called get_script_member_id() and set_script_member_id(). Some simple classes
	  like Package even bypass all of this and just implement get_member() method directly with property names
	  hardcoded into the if block.
	* The object methods are usually MTH_* constants and are handled in call_method_id(), script_method_id() or
	  directly call_method(), script_method() methods. They are also almost all defined in
	  pol-core/bscript/parser.cpp as ObjMethod object_methods[], the rest of the methods follows the same hardcode
	  logic as the properties in the "minor" objects.
	* Hint: the PHP parser will sort entries alphabetically, try to keep this file in the same order that you will
	  find definitions on the source files: it will be easier to maintain.

	Last full review and sync with the code: 08/31/2015 by Bodom... it's a long job, please try to keep this in sync :)
-->
<fileheader>
<header>Class Hierarchy</header>
<pre xml:space="preserve">

            <a href="#UObject">UObject</a>             <a href="#Account">Account</a>         <a href="#Polcore">PolCore()</a>      <a href="#DataFileElement">DataFileElement</a>   <a href="#FunctionObject">FunctionObject</a>
               |
               |                <a href="#Client">Client</a>          <a href="#Script">Script</a>         <a href="#Datafile">Datafile</a>          <a href="#Boolean">Boolean</a>
     +---------+--------+
     |                  |       <a href="#Guild">Guild</a>           <a href="#Packet">Packet</a>         <a href="#BinaryFile">BinaryFile</a>
   <a href="#Character">Character</a>           <a href="#Item">Item</a>
     |                  |       <a href="#Party">Party</a>           <a href="#AuxConnection">AuxConnection</a>  <a href="#Package">Package</a>
    <a href="#NPC">NPC</a>                 |
                        |                                      <a href="#Struct">Struct</a>
     +------------------+--------------+-----------+
     |                  |              |           |           <a href="#Array">Array</a>
 <a href="#Equipment">Equipment</a>           <a href="#Lockable">Lockable</a>         <a href="#Map">Map</a>        <a href="#Multi">Multi</a>
     |                  |                          |           <a href="#Dictionary">Dictionary</a>
 +---+----+        +----+--------+            +----+----+
 |        |        |             |            |         |      <a href="#String">String</a>
<a href="#Armor">Armor</a>  <a href="#Weapon">Weapon</a>     <a href="#Door">Door</a>        <a href="#Container">Container</a>      <a href="#Boat">Boat</a>     <a href="#House">House</a>
                                 |                             <a href="#Error">Error</a>
                            +----+----+
                            |         |                        <a href="#StorageAreas">StorageAreas</a>
                         <a href="#Spellbook">Spellbook</a>   <a href="#Corpse">Corpse</a>
                                                               <a href="#StorageArea">StorageArea</a>

                                                               
</pre>

<datemodified>02/05/2018</datemodified>
</fileheader>


<class name="UObject">
<child>Character</child>
<child>Item</child>
<explain>The base UO Object class</explain>
<member mname="x" type="Integer" access="r/o" mdesc="x coordinate" />
<member mname="y" type="Integer" access="r/o" mdesc="y coordinate" />
<member mname="z" type="Integer" access="r/o" mdesc="z coordinate" />
<member mname="realm" type="String" access="r/o" mdesc="case-sensitive name of the realm" />
<member mname="name" type="String" access="r/w" mdesc="name string (for items use .desc for single-click text, this does not include suffix or formatting)" />
<member mname="objtype" type="Integer" access="r/o" mdesc="object type as defined in itemdesc.cfg" />
<member mname="graphic" type="Integer" access="r/w" mdesc="art id number" />
<member mname="serial" type="Integer" access="r/o" mdesc="unique object identifier" />
<member mname="color" type="Integer" access="r/w" mdesc="color value (0 to 0xFFF)" />
<member mname="facing" type="Integer" access="r/w" mdesc="facing or the object (meaningful for mobiles and light-emitting items) range 0-127" />
<member mname="height" type="Integer" access="r/o" mdesc="height of the graphic as defined in tiledata.mul" />
<member mname="dirty" type="Boolean" access="r/o" mdesc="This is set when anything on the object changes, and cleared on world save" />
<member mname="weight" type="Integer" access="r/o" mdesc="weight of the graphic as defined in tiledata.mul" />
<member mname="multi" type="Multi" access="r/o" mdesc="MultiRef for the Multi the object is on" />
<member mname="specific_name" type="Boolean" access="r/o" mdesc="Set if a specific name is set, otherwise like itemdesc name false." />

<method proto="propnames()" returns="Array" desc="Returns an array of property name strings." />
<method proto="isa(POLCLASS_*)" returns="boolean" desc="True if the derived class is the same as the passed class type (see uo.em for all constants)" />
<method proto="getprop(string propname)" returns="script object/error" desc="Returns an unpacked script object (i.e. int,string,array,etc)" />
<method proto="setprop(string propname, object propval)" returns="true/error" desc="Sets a packable object to a property." />
<method proto="eraseprop(string propname)" returns="true/error" desc="Erases the property named 'propname'." />
<method desc="Sets the built-in member 'membername' to 'value'. obj.set_member(&quot;name&quot;,&quot;Eric&quot;) is the same as obj.name := &quot;Eric&quot;" proto="set_member(string membername, obj value)" returns="object, new value of member or error" />
<method desc="Gets the value of the built-in member 'membername'. var objname := obj.get_member(&quot;name&quot;) is the same as var objname := obj.name" proto="get_member(string membername)" returns="object, value of member or error" />
</class>


<class name="Item">
<parent>UObject</parent>
<child>Equipment</child>
<child>Lockable</child>
<child>Map</child>
<child>Multi</child>
<explain>Represents a physical item in the world.</explain>
<member mname="amount" type="Integer" access="r/o" mdesc="stack size" />
<member mname="layer" type="Integer" access="r/o" mdesc="equipment layer" />
<member mname="container" type="Item" access="r/o" mdesc="item contained in" />
<member mname="usescript" type="String" access="r/w" mdesc="double-click action script. set to empty string for itemdesc.cfg default script." />
<member mname="equipscript" type="String" access="r/w" mdesc="script run when item equipped on a character" />
<member mname="unequipscript" type="String" access="r/w" mdesc="script run when item unequipped" />
<member mname="desc" type="String" access="r/o" mdesc="single click description string (formatted name and suffix added to it without formatting if it exists)" />
<member mname="movable" type="Boolean" access="r/w" mdesc="true if player may move the item" />
<member mname="invisible" type="Boolean" access="r/w" mdesc="true if the item is invisible" />
<member mname="decayat" type="Integer" access="r/w" mdesc="game clock value after which this item might decay. 0=do not decay" />
<member mname="sellprice" type="Integer" access="r/w" mdesc="Amount of gold an NPC sells this item for. 0=not for sale, -1=itemdesc default." />
<member mname="buyprice" type="Integer" access="r/w" mdesc="Amount of gold an NPC buys this item for. 0=not for sale, -1=itemdesc default." />
<member mname="newbie" type="Boolean" access="r/w" mdesc="true if the item remains with the ghost when player dies" />
<member mname="insured" type="Boolean" access="r/w" mdesc="like newbie, but it gets reset to 0 whenever it saves an item from dropping" />
<member mname="item_count" type="Integer" access="r/o" mdesc="number of items in container including the container itself (1 if this item is not a container or an empty container)" />
<member mname="stackable" type="Integer" access="r/o" mdesc="return is based on POL Decided stackability of item." />
<member mname="tile_layer" type="Integer" access="r/o" mdesc="returns the Layer setting in the Tiles.cfg/Tiledata" />
<member mname="resist_fire" type="Integer" access="r/o" mdesc="Total AOS+ armor factor." />
<member mname="resist_cold" type="Integer" access="r/o" mdesc="Total AOS+ armor factor." />
<member mname="resist_energy" type="Integer" access="r/o" mdesc="Total AOS+ armor factor." />
<member mname="resist_poison" type="Integer" access="r/o" mdesc="Total AOS+ armor factor." />
<member mname="resist_physical" type="Integer" access="r/o" mdesc="Total AOS+ armor factor." />
<member mname="resist_fire_mod" type="Integer" access="r/w" mdesc="AOS+ Armor factor modifier" />
<member mname="resist_cold_mod" type="Integer" access="r/w" mdesc="AOS+ Armor factor modifier" />
<member mname="resist_energy_mod" type="Integer" access="r/w" mdesc="AOS+ Armor factor modifier" />
<member mname="resist_poison_mod" type="Integer" access="r/w" mdesc="AOS+ Armor factor modifier" />
<member mname="resist_physical_mod" type="Integer" access="r/w" mdesc="AOS+ Armor factor modifier" />
<member mname="saveonexit" type="Boolean" access="r/w" mdesc="default 1, if you set this to 0 the item and (if container, it's contents) will NOT be saved to datafile" />
<member mname="damage_fire" type="Integer" access="r/o" mdesc="Total AOS+ damage factor." />
<member mname="damage_cold" type="Integer" access="r/o" mdesc="Total AOS+ damage factor." />
<member mname="damage_energy" type="Integer" access="r/o" mdesc="Total AOS+ damage factor." />
<member mname="damage_poison" type="Integer" access="r/o" mdesc="Total AOS+ damage factor." />
<member mname="damage_physical" type="Integer" access="r/o" mdesc="Total AOS+ damage factor." />
<member mname="damage_fire_mod" type="Integer" access="r/w" mdesc="AOS+ damage modifier" />
<member mname="damage_cold_mod" type="Integer" access="r/w" mdesc="AOS+ damage modifier" />
<member mname="damage_energy_mod" type="Integer" access="r/w" mdesc="AOS+ damage modifier" />
<member mname="damage_poison_mod" type="Integer" access="r/w" mdesc="AOS+ damage modifier" />
<member mname="damage_physical_mod" type="Integer" access="r/w" mdesc="AOS+ damage modifier" />
<member mname="getgottenby" type="Character" access="r/o" mdesc="Returns CharRef of Player holding item, Error if not being held" />
<member mname="process" type="Script" access="r/o" mdesc="Control script reference, error on none" />
<member mname="doubleclickrange" type="Integer" access="r/o" mdesc="Max distance for using this item" />
<member mname="quality" type="Double" access="r/w" mdesc="1.0=Average and default" />
<member mname="hp" type="Integer" access="r/w" mdesc="Hit points of item" />
<member mname="maxhp_mod" type="Integer" access="r/w" mdesc="Maximum Hit Point modification" />
<member mname="maxhp" type="Integer" access="r/o" mdesc="Maximum Hit Points of item" />
<member mname="name_suffix" type="String" access="r/o" mdesc="For adding crafter marks or such, will be appended to desc" />
<member mname="house" type="House" access="r/o" mdesc="Returns a reference to the House this item is component of, if any" />
<member mname="no_drop" type="Boolean" access="r/w" mdesc="If set no drop of this item is allowed, except no_drop_exception is set for target" />
<member mname="lower_reagent_cost" type="Integer" access="r/o" mdesc="Total of base property plus mod, applied to characters when equipt." />
<member mname="spell_damage_increase" type="Integer" access="r/o" mdesc="Total of base property plus mod, applied to characters when equipt." />
<member mname="faster_casting" type="Integer" access="r/o" mdesc="Total of base property plus mod, applied to characters when equipt." />
<member mname="faster_cast_recovery" type="Integer" access="r/o" mdesc="Total of base property plus mod, applied to characters when equipt." />
<member mname="defence_increase" type="Integer" access="r/o" mdesc="Total of base property plus mod, applied to characters when equipt." />
<member mname="defence_increase_cap" type="Integer" access="r/o" mdesc="Total of base property plus mod, applied to characters when equipt." />
<member mname="lower_mana_cost" type="Integer" access="r/o" mdesc="Total of base property plus mod, applied to characters when equipt." />
<member mname="hit_chance" type="Integer" access="r/o" mdesc="Total of base property plus mod, applied to characters when equipt." />
<member mname="resist_fire_cap" type="Integer" access="r/o" mdesc="Total of base property plus mod, applied to characters when equipt." />
<member mname="resist_cold_cap" type="Integer" access="r/o" mdesc="Total of base property plus mod, applied to characters when equipt." />
<member mname="resist_energy_cap" type="Integer" access="r/o" mdesc="Total of base property plus mod, applied to characters when equipt." />
<member mname="resist_physical_cap" type="Integer" access="r/o" mdesc="Total of base property plus mod, applied to characters when equipt." />
<member mname="resist_poison_cap" type="Integer" access="r/o" mdesc="Total of base property plus mod, applied to characters when equipt." />
<member mname="luck" type="Integer" access="r/o" mdesc="Total of base property plus mod, applied to characters when equipt." />
<member mname="defence_increase_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base of the object." />
<member mname="defence_increase_cap_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base of the object." />
<member mname="lower_mana_cost_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base of the object." />
<member mname="hit_chance_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base of the object." />
<member mname="resist_fire_cap_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base of the object." />
<member mname="resist_cold_cap_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base of the object." />
<member mname="resist_energy_cap_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base of the object." />
<member mname="resist_physical_cap_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base of the object." />
<member mname="resist_poison_cap_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base of the object." />
<member mname="lower_reagent_cost_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base of the object." />
<member mname="spell_damage_increase_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base of the object." />
<member mname="faster_casting_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base of the object." />
<member mname="faster_cast_recovery_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base of the object." />
<member mname="luck_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base of the object." />


<method proto="splitStackAt(x, y, z, realm, amount)" returns="Item" desc="Will split the item into 2 stacks. Returns a reference to the new stack made from item. Places new stack at the coordinates" />
<method proto="splitStackInto(container, amount)" returns="Item" desc="Will split the item into 2 stacks. Returns a reference to the new stack made from item. Places new stack into the container" />
<method proto="hasExistingStack(container)" returns="Item" desc="Checks if there is an existing stack in a container or not, returns the ItemRef of the stack if it exists" />
</class>


<class name="Map">
<parent>Item</parent>
<explain>A Map item that shows a a map image in a gump when double clicked.</explain>
<member mname="xeast" type="Integer" access="r/w" mdesc="east gump edge (world coord)" />
<member mname="xwest" type="Integer" access="r/w" mdesc="west gump edge (world coord)" />
<member mname="ynorth" type="Integer" access="r/w" mdesc="north gump edge (world coord)" />
<member mname="ysouth" type="Integer" access="r/w" mdesc="south gump edge (world coord)" />
<member mname="gumpwidth" type="Integer" access="r/w" mdesc="width in pixels of map gump" />
<member mname="gumpheight" type="Integer" access="r/w" mdesc="height in pixels of map gump" />
<member mname="facetid" type="Integer" access="r/w" mdesc="This has actually nothing to do with realms, the value is the same as in FacetXX.mul file" />
<member mname="editable" type="Boolean" access="r/w" mdesc="If true, pins on the map can be moved" />

<method proto="getpins()" returns="array" desc="returns array of structs{x,y} of pins for the map" />
<method proto="insertpin(int index, int x, int y)" returns="true/error" desc="insert pin{x,y} before index" />
<method proto="appendpin(int x, int y)" returns="true/error" desc="append pin{x,y} to end of course" />
<method proto="erasepin(int index)" returns="true/error" desc="erase pin at index" />
</class>


<class name="Character">
<parent>UObject</parent>
<child>NPC</child>
<explain>A mobile object that exists in the world (NPC or player character)</explain>
<member mname="warmode" type="Integer" access="r/o" mdesc="1 if in warmode" />
<member mname="movemode" type="String" access="r/o" mdesc="movemode string {default 'L'} like from NPCDesc.cfg" />
<member mname="gender" type="Integer" access="r/w" mdesc="0=male 1=female" />
<member mname="trueobjtype" type="Integer" access="r/w" mdesc="original objtype" />
<member mname="truecolor" type="Integer" access="r/w" mdesc="original color" />
<member mname="ar_mod" type="Integer" access="r/w" mdesc="Armor factor modifier" />
<member mname="resist_fire" type="Integer" access="r/o" mdesc="Total AOS+ armor factor. If it's an NPC without armor equipped, it will return its intrinsic armor value taken from NpcDesc AR entry." />
<member mname="resist_cold" type="Integer" access="r/o" mdesc="Total AOS+ armor factor. If it's an NPC without armor equipped, it will return its intrinsic armor value taken from NpcDesc AR entry." />
<member mname="resist_energy" type="Integer" access="r/o" mdesc="Total AOS+ armor factor. If it's an NPC without armor equipped, it will return its intrinsic armor value taken from NpcDesc AR entry." />
<member mname="resist_poison" type="Integer" access="r/o" mdesc="Total AOS+ armor factor. If it's an NPC without armor equipped, it will return its intrinsic armor value taken from NpcDesc AR entry." />
<member mname="resist_physical" type="Integer" access="r/o" mdesc="Total AOS+ armor factor. If it's an NPC without armor equipped, it will return its intrinsic armor value taken from NpcDesc AR entry." />
<member mname="resist_fire_mod" type="Integer" access="r/w" mdesc="AOS+ Armor factor modifier (Player)" />
<member mname="resist_cold_mod" type="Integer" access="r/w" mdesc="AOS+ Armor factor modifier (Player)" />
<member mname="resist_energy_mod" type="Integer" access="r/w" mdesc="AOS+ Armor factor modifier (Player)" />
<member mname="resist_poison_mod" type="Integer" access="r/w" mdesc="AOS+ Armor factor modifier (Player)" />
<member mname="resist_physical_mod" type="Integer" access="r/w" mdesc="AOS+ Armor factor modifier (Player)" />
<member mname="hidden" type="Boolean" access="r/w" mdesc="1 = normal players cannot see" />
<member mname="concealed" type="Integer" access="r/w" mdesc="concealed below this value cannot see" />
<member mname="frozen" type="Boolean" access="r/w" mdesc="1 = player is frozen (by a GM)" />
<member mname="paralyzed" type="Boolean" access="r/w" mdesc="1 = player is paralyzed" />
<member mname="poisoned" type="Boolean" access="r/w" mdesc="1 = player is poisoned, just makes the health bar green or not" />
<member mname="stealthsteps" type="Integer" access="r/w" mdesc="number of walk steps left until player is revealed" />
<member mname="mountedsteps" type="Integer" access="r/w" mdesc="number of steps taken while character was mounted" />
<member mname="squelched" type="Integer" access="r/o" mdesc="1 = player cannot speak" />
<member mname="dead" type="Integer" access="r/o" mdesc="1 = player is dead" />
<member mname="ar" type="Integer" access="r/o" mdesc="Total armor factor. If it's an NPC without armor equipped, it will return its intrinsic armor value taken from NpcDesc AR entry." />
<member mname="shield" type="Armor" access="r/o" mdesc="Returns the ItemRef of the sheild, if any, is worn." />
<member mname="backpack" type="Item" access="r/o" mdesc="Reference to character's pack (if any)" />
<member mname="trading_with" type="Character" access="r/o" mdesc="Reference to character they are trading with (if any)" />
<member mname="tradewindow" type="Container" access="r/o" mdesc="Reference to the trade container if the char has an active trade, error if no active trade" />
<member mname="weapon" type="Item" access="r/o" mdesc="Reference to character's weapon (if any)" />
<member mname="acct" type="Integer" access="r/o" mdesc="Account Reference (if not NPC) (deprecated, will be removed in next release, use Client instead)" />
<member mname="acctname" type="Account" access="r/o" mdesc="Account name string (if not NPC)" />
<member mname="cmdlevel" type="Integer" access="r/w" mdesc="command level of character" />
<member mname="cmdlevelstr" type="String" access="r/o" mdesc="string name of command level" />
<member mname="criminal" type="Integer" access="r/o" mdesc="1 = player is temporally criminal (gray) or murderer (red) (see also temporally_criminal)" />
<member mname="temporally_criminal" type="Integer" access="r/o" mdesc="1 = player is temporally criminal (gray) (see also criminal)" />
<member mname="ip" type="String" access="r/o" mdesc="IP Address string (deprecated, will be removed in next release, use Client instead)" />
<member mname="cursor" type="Boolean" access="r/o" mdesc="True if the client has an active target cursor" />
<member mname="gump" type="Boolean" access="r/o" mdesc="True if the client has any active gumps from SendGump" />
<member mname="prompt" type="Boolean" access="r/o" mdesc="True if the client has any active String or Unicode prompt windows" />
<member mname="gold" type="Integer" access="r/o" mdesc="Amount of gold in character's pack" />
<member mname="title_prefix" type="String" access="r/w" mdesc="String placed before name i.e. Lord Racalac" />
<member mname="title_suffix" type="String" access="r/w" mdesc="String placed after name i.e. Racalac the Brave" />
<member mname="title_guild" type="String" access="r/w" mdesc="String guild title i.e. [ROX, super d00d] Racalac" />
<member mname="title_race" type="String" access="r/w" mdesc="String race title after suffix in paperdoll" />
<member mname="guildid" type="Integer" access="r/o" mdesc="guild ID number" />
<member mname="guild" type="Guild" access="r/o" mdesc="guild object reference" />
<member mname="murderer" type="Boolean" access="r/w" mdesc="1 = player flagged murderer (red)" />
<member mname="attached" type="Script" access="r/o" mdesc="Script reference for attached script" />
<member mname="reportables" type="Array" access="r/o" mdesc="(reputation system) Array of Structs: { serial, killer, gameclock }, serial = killer's serial, killer = 'offline mobile reference' to the killer, gameclock = game time when the death occurred" />
<member mname="clientversion" type="String" access="r/o" mdesc="UO Client version string" />
<member mname="clientinfo" type="Struct" access="r/o" mdesc="UO Client information struct (check out core-changes.txt for an example) (deprecated, will be removed in next release, use Client instead)" />
<member mname="clientver_detail" type="Struct" access="r/o" mdesc="UO Client version string as Struct of Ints {major;minor;rev;patch} (deprecated, will be removed in next release, use Client instead)" />
<member mname="delay_mod" type="Integer" access="r/w" mdesc="Weapon Delay modifier, milliseconds" />
<member mname="createdat" type="Integer" access="r/o" mdesc="PolClock when character was created" />
<member mname="opponent" type="MobileRef" access="r/o" mdesc="Mobile reference if a combat opponent is selected." />
<member mname="connected" type="Boolean" access="r/o" mdesc="To determine if the character is actively connected to the game. Is set to 1 before logon/reconnect scripts are run and 0 right before logofftest is run. Will return 1 on NPC." />
<member mname="uclang" type="String" access="r/o" mdesc="Reports the Unicode Language string client sends during logon." />
<member mname="race" type="Integer" access="r/w" mdesc="Set/get the ML/SA race (new constants in UO.EM: RACE_HUMAN, RACE_ELF,RACE_GARGOYLE). You have to set visual graphic by yourself if you change value (Human male/female = 0x190/0x191 / Elf male/female = 0x25d/0x25e / Gargoyle male/female = 0x029a/0x029b). You can choose Race at Char creation if your UOExpansion and UOFeature settings fit." />
<member mname="hitchance_mod" type="Integer" access="r/w" mdesc="Additive modificator of the hitchance from the attacker (+- int in thousandth)" />
<member mname="evasionchance_mod" type="Integer" access="r/w" mdesc="Subtractive modificator of the hitchance from the defender (+- int in thousandth)" />
<member mname="carrying_capacity" type="Integer" access="r/o" mdesc="Current carrying capacity. Defined as (40 + 3.5*chr.strength + chr.carrying_capacity_mod)*ssopt.carrying_capacity_mod. Note that characters can go above their carrying capacity, but will run out of stamina much faster." />
<member mname="carrying_capacity_mod" type="Integer" access="r/w" mdesc="Carrying capacity modifier. Is taken into account prior to global ssopt modifier." />
<member mname="statcap" type="Integer" access="r/w" mdesc="AOS+ Statcap entry in statusbar, default 255" />
<member mname="skillcap" type="Integer" access="r/w" mdesc="This is for storage of overall skillcap, default 700" />
<member mname="followers_max" type="Integer" access="r/w" mdesc="Max followers for statmsg packet, default 0 "/>
<member mname="followers" type="Integer" access="r/w" mdesc="This is for storage for the Followers byte in statmsg packet, default 0 "/>
<member mname="tithing" type="Integer" access="r/w" mdesc="Tithing for statmsg packet, default 0 "/>
<member mname="party" type="Party" access="r/o" mdesc="party object reference"/>
<member mname="candidate_of_party" type="Party" access="r/o" mdesc="party object reference"/>
<member mname="partycanloot" type="Boolean" access="r/o" mdesc="True if client has set the loot rights"/>
<member mname="damage_fire" type="Integer" access="r/o" mdesc="Total AOS+ damage factor." />
<member mname="damage_cold" type="Integer" access="r/o" mdesc="Total AOS+ damage factor." />
<member mname="damage_energy" type="Integer" access="r/o" mdesc="Total AOS+ damage factor." />
<member mname="damage_poison" type="Integer" access="r/o" mdesc="Total AOS+ damage factor." />
<member mname="damage_physical" type="Integer" access="r/o" mdesc="Total AOS+ damage factor." />
<member mname="damage_fire_mod" type="Integer" access="r/w" mdesc="AOS+ damage modifier" />
<member mname="damage_cold_mod" type="Integer" access="r/w" mdesc="AOS+ damage modifier" />
<member mname="damage_energy_mod" type="Integer" access="r/w" mdesc="AOS+ damage modifier" />
<member mname="damage_poison_mod" type="Integer" access="r/w" mdesc="AOS+ damage modifier" />
<member mname="damage_physical_mod" type="Integer" access="r/w" mdesc="AOS+ damage modifier" />
<member mname="movecost_walk_mod" type="Double" access="r/w" mdesc="multiplier for stamina consum on movement" />
<member mname="movecost_run_mod" type="Double" access="r/w" mdesc="multiplier for stamina consum on movement" />
<member mname="movecost_walk_mounted_mod" type="Double" access="r/w" mdesc="multiplier for stamina consum on movement" />
<member mname="movecost_run_mounted_mod" type="Double" access="r/w" mdesc="multiplier for stamina consum on movement" />
<member mname="aggressorto" type="Array" access="r/o" mdesc="list of mobiles this character is flagged as aggressor on repsys" />
<member mname="lawfullydamaged" type="Array" access="r/o" mdesc="list of mobiles this character is flagged as lawfully damaged on repsys" />
<member mname="uo_expansion_client" type="Integer" access="r/o" mdesc="client send expansion info flag (deprecated, will be removed in next release, use Client instead)" />
<member mname="clienttype" type="Integer" access="r/o" mdesc="clientversion type bitfield (deprecated, will be removed in next release, use Client instead)" />
<member mname="deafed" type="Integer" access="r/o" mdesc="1 = player cannot hear" />
<member mname="client" type="Client" access="r/o" mdesc="returns ClientRef object or error" />
<member mname="house_editing" type="Boolean" access="r/o" mdesc="1 if character is currently editing an house"/>
<member mname="lastcoord" type="Struct" access="r/o" mdesc="position before the last walk packet as struct{lastx,lasty,lastz}"/>
<member mname="active_skill" type="Boolean" access="r/o" mdesc="1 if character has an active attached skill script"/>
<member mname="casting_spell" type="Bool" access="r/o" mdesc="1 if character has an active attached spell script"/>
<member mname="last_textcolor" type="Struct" access="r/o" mdesc="last text color used by the character. Values are between 2 and 1001. Returns 0 if not yet spoken. (will not be saved inside of the datafile)"/>
<member mname="lower_reagent_cost" type="Integer" access="r/o" mdesc="Total calculation of all modifiers from items equipt plus personal modifier and personal base." />
<member mname="spell_damage_increase" type="Integer" access="r/o" mdesc="Total calculation of all modifiers from items equipt plus personal modifier and personal base." />
<member mname="faster_casting" type="Integer" access="r/o" mdesc="Total calculation of all modifiers from items equipt plus personal modifier and personal base." />
<member mname="faster_cast_recovery" type="Integer" access="r/o" mdesc="Total calculation of all modifiers from items equipt plus personal modifier and personal base." />
<member mname="defence_increase" type="Integer" access="r/o" mdesc="Total calculation of all modifiers from items equipt plus personal modifier and personal base." />
<member mname="defence_increase_cap" type="Integer" access="r/o" mdesc="Total calculation of all modifiers from items equipt plus personal modifier and personal base." />
<member mname="lower_mana_cost" type="Integer" access="r/o" mdesc="Total calculation of all modifiers from items equipt plus personal modifier and personal base." />
<member mname="hit_chance" type="Integer" access="r/o" mdesc="Total calculation of all modifiers from items equipt plus personal modifier and personal base." />
<member mname="resist_fire_cap" type="Integer" access="r/o" mdesc="Total calculation of all modifiers from items equipt plus personal modifier and personal base." />
<member mname="resist_cold_cap" type="Integer" access="r/o" mdesc="Total calculation of all modifiers from items equipt plus personal modifier and personal base." />
<member mname="resist_energy_cap" type="Integer" access="r/o" mdesc="Total calculation of all modifiers from items equipt plus personal modifier and personal base." />
<member mname="resist_physical_cap" type="Integer" access="r/o" mdesc="Total calculation of all modifiers from items equipt plus personal modifier and personal base." />
<member mname="resist_poison_cap" type="Integer" access="r/o" mdesc="Total calculation of all modifiers from items equipt plus personal modifier and personal base." />
<member mname="luck" type="Integer" access="r/o" mdesc="Total calculation of all modifiers from items equipt plus personal modifier and personal base." />
<member mname="defence_increase_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base property." />
<member mname="defence_increase_cap_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base property." />
<member mname="lower_mana_cost_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base property." />
<member mname="hit_chance_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base property." />
<member mname="resist_fire_cap_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base property." />
<member mname="resist_cold_cap_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base property." />
<member mname="resist_energy_cap_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base property." />
<member mname="resist_physical_cap_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base property." />
<member mname="resist_poison_cap_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base property." />
<member mname="lower_reagent_cost_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base property." />
<member mname="spell_damage_increase_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base property." />
<member mname="faster_casting_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base property." />
<member mname="faster_cast_recovery_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base property." />
<member mname="luck_mod" type="Integer" access="r/w" mdesc="Modifier for property, added to base property." />

<method proto="setpoisoned(bool)" returns="true/error" desc="sets the character poisoned, controller of calling script is flagged as in repsystem" />
<method proto="setparalyzed(bool)" returns="true/error" desc="sets the character paralyzed, controller of calling script is flagged as in repsystem" />
<method proto="setcriminal(int level)" returns="true/error" desc="sets the character criminal. level multiplies the CriminalFlagInterval as defined in repsys.cfg. level=0 clears criminal timer." />
<method proto="setlightlevel(int level, int duration)" returns="true" desc="sets the light level of the character to 'level' for 'duration' seconds" />
<method proto="squelch(int duration)" returns="int/error" desc="character cannot talk for 'duration' seconds. -1 means forever. 0 clears the squelch" />
<method proto="enable(string setting)" returns="true/error" desc="enables the 'granted' privilege to the character" />
<method proto="disable(string setting)" returns="true" desc="disables the 'granted' privilege to the character" />
<method proto="enabled(string setting)" returns="true/false" desc="true if the privilege is enabled" />
<method proto="privileges()" returns="dictionary" desc="Dictionary where keys are privilege name, value is 0/1 boolean." />
<method proto="setcmdlevel(string cmdlevel)" returns="true/error" desc="grants the command level to the char as defined in cmds.cfg" />
<method proto="spendgold(int amount)" returns="true/error" desc="if enough gold, removes it from the player's pack" />
<method proto="setmurderer(bool)" returns="true/error" desc="flags the character as a murderer (red)" />
<method proto="removereportable(int serial, int gameclock)" returns="true/error" desc="removes the killer with 'serial' from the reportables list that was added at 'gameclock'" />
<method proto="getgottenitem()" returns="error/ItemRef" desc="returns an ItemRef to the item held on the player's cursor, if any." />
<method proto="cleargottenitem()" returns="true/error" desc="Returns 'dragged' item to original location." />
<method proto="setwarmode(boolean)" returns="integer/error" desc="Sets the internal warmode flag and sends the update to the player. Returns the new warmode value." />
<method proto="getcorpse()" returns="Corpse" desc="Returns an item reference to the most recent corpse made." />
<method proto="attack_once([MobileRef opp])" returns="true/error" desc="Attacks once without modifing the swingtimer. If no opp is given attacks current attackable opponent, else attacks given opponent (but checks if still attackable)" />
<method proto="setswingtimer(int time)" returns="true/error" desc="If opponent is set sets swingtimer to given ms time." />
<method proto="kill([MobileRef killer])" returns="true" desc="Kills character ignoring invul, if killer is set repsys:OnDamage is called" />
<method proto="setfacing(string/int direction, flags := FACE_NORMAL)" returns="true/error" desc="Sets Facing to given direction. If FACE_FORCE is set frozen/paralysed is not checked" />
<method proto="compareversion(string Version)" returns="true/false" desc="true if Client Version >= given Versionstring" />
<method proto="setAggressorTo(MobileRef chr)" returns="true/error" desc="sets aggressor for repsys.cfg:AggressorFlagTimeout seconds for given chr" />
<method proto="setLawfullydamagedTo(MobileRef chr)" returns="true/error" desc="sets lawfullydamaged for repsys.cfg:AggressorFlagTimeout seconds for given chr" />
<method proto="clearAggressorTo(MobileRef chr)" returns="true/error" desc="clears aggressor entry for given chr" />
<method proto="clearLawfullydamagedTo(MobileRef chr)" returns="true/error" desc="clears lawfullydamaged entry for given chr" />
<method proto="deaf(int duration)" returns="int/error" desc="character cannot hear for 'duration' seconds. -1 means forever. 0 clears the deaf" />
<method proto="setseason(int season_id,int playsound )" returns="int/error" desc="Used to send the Season packet 0xBC to a single character, doesnt resend the lightlevel or weather." />
<method proto="addBuff(int icon_id, int duration, int cliloc_name, int cliloc_descr, array arguments)" returns="true/error" desc="Adds a buff to Character's buff bar. Duration is in seconds: countdown is done by the client, but the icon is never automatically removed. Arguments is an Unicode string (array of int); separated by a single tab character. Example: who.addBuff(1029, 30, 1075814, 1075815, CAscZ(&quot;1234 5678&quot;));" />
<method proto="clearBuffs()" returns="true/error" desc="Removes all buffs from Character's buff bar." />
<method proto="delBuff(int icon_id)" returns="true/error" desc="Removes a buff from Character's buff bar." />
<method proto="disableSkillsFor(int duration)" returns="duration/error" desc="Disables skill scripts for given seconds" />
</class>


<class name="NPC">
<parent>Character</parent>
<explain>A Non-Player Character mobile object</explain>

<member mname="alignment" type="Integer" access="r/o" mdesc="NPC template alignment." />
<member mname="npctemplate" type="String" access="r/o" mdesc="NPC template name in npcdesc.cfg" />
<member mname="master" type="Character" access="r/o" mdesc="controlling player character, false if none" />
<member mname="process" type="Script" access="r/o" mdesc="Control script reference, error on none" />
<member mname="eventmask" type="Integer" access="r/o" mdesc="bitwise-ORd list of sysevents that have been enabled, error if no control script running" />
<member mname="speech_color" type="Integer" access="r/w" mdesc="NPC speech text color" />
<member mname="speech_font" type="Integer" access="r/w" mdesc="NPC speech text font" />
<member mname="script" type="String" access="r/w" mdesc="control script name" />
<member mname="use_adjustments" type="Boolean" access="r/w" mdesc="Use movement adjustments to avoid single-tile obsticals" />
<member mname="run_speed" type="Integer" access="r/w" mdesc="NPC walk delay (maximum 250)" />
<member mname="saveonexit" type="Boolean" access="r/w" mdesc="default 1, if you set this to 0 the npc and all items contained within it's wornitems container will NOT be saved to datafile" />
<member mname="no_drop_exception" type="Boolean" access="r/w" mdesc="defines if npc is a valid target even if no_drop is set for the item" />

<method proto="setmaster(CharacterRef master)" returns="true/false" desc="Sets the master character for the NPC, if not passed, clears master." />
</class>


<class name="Boat">
<parent>Multi</parent>
<explain>A Multi object that moves in water.</explain>
<member mname="items" type="Array" access="r/o" mdesc="Array of Item References on the deck of the boat" />
<member mname="mobiles" type="Array" access="r/o" mdesc="Array of Character References on the deck" />
<member mname="has_offline_mobiles" type="Boolean" access="r/o" mdesc="true if players are logged out on the deck" />
<member mname="tillerman" type="Item" access="r/o" mdesc="ItemRef to the tillerman item" />
<member mname="portplank" type="Item" access="r/o" mdesc="ItemRef to the left-side plank item" />
<member mname="starboardplank" type="Item" access="r/o" mdesc="ItemRef to the right-side plank item" />
<member mname="hold" type="Item" access="r/o" mdesc="ItemRef to the hold container item" />
<member mname="rope" type="Array" access="r/o" mdesc="array of ItemRefs of all the rope components on the boat, or empty array if none" />
<member mname="wheel" type="Array" access="r/o" mdesc="array of ItemRefs of all the wheel components on the boat, or empty array if none" />
<member mname="hull" type="Array" access="r/o" mdesc="array of ItemRefs of all the hull components on the boat, or empty array if none" />
<member mname="tiller" type="Array" access="r/o" mdesc="array of ItemRefs of all the tiller components on the boat, or empty array if none" />
<member mname="rudder" type="Array" access="r/o" mdesc="array of ItemRefs of all the rudder components on the boat, or empty array if none" />
<member mname="sails" type="Array" access="r/o" mdesc="array of ItemRefs of all the sails components on the boat, or empty array if none" />
<member mname="storage" type="Array" access="r/o" mdesc="array of ItemRefs of all the storage components on the boat, or empty array if none" />
<member mname="weaponslot" type="Array" access="r/o" mdesc="array of ItemRefs of all the weaponslot components on the boat, or empty array if none" />
<member mname="components" type="Array" access="r/o" mdesc="array of ItemRefs of all the components on the boat" />
<member mname="multiid" type="Integer" access="r/o" mdesc="id for this kind of multi" />

<method proto="move_offline_mobiles(int x, int y, int z[, string realm])" returns="true/false" desc="moves offline mobiles on boat to x,y,z. If realm is not set, Boat-realm is used." />
</class>


<class name="House">
<parent>Multi</parent>
<explain>A Multi object where players hoard items.</explain>
<member mname="components" type="Array" access="r/o" mdesc="Array of House components, i.e. sign, doors" />
<member mname="items" type="Array" access="r/o" mdesc="Array of Item References in the house" />
<member mname="mobiles" type="Array" access="r/o" mdesc="Array of Character References in the house" />
<member mname="custom" type="Boolean" access="r/o" mdesc="1 = custom house" />
<member mname="house_editing" type="Boolean" access="r/o" mdesc="1 if the house is currently being edited" />
<member mname="multiid" type="Integer" access="r/o" mdesc="id for this kind of multi" />
<member mname="house_parts" type="Integer" access="r/o" mdesc="returns array of structs{graphic,xoffset,yoffset,z} or error if not a custom house, or currently been edited. To get the real coords from an elem add house.x/y" />

<method proto="setcustom(bool custom)" returns="true/error" desc="Sets the house as custom. Setting to 1 is needed before SendHousingTool() works." />
<method proto="add_component(ItemRef)" returns="true/error" desc="Add item to House components" />
<method proto="erase_component(ItemRef)" returns="true/error" desc="Erase item from House components" />
<method proto="addhousepart(int graphic, int xoffset, int yoffset, int z)" returns="true/error" desc="Adds a part to the custom house design." />
<method proto="erasehousepart(int graphic, int xoffset, int yoffset, int z)" returns="true/error" desc="Removes a part from the custom house design." />
<method proto="acceptcommit(Character chr, bool commit)" returns="true/error" desc="If commit is 0 then drops the not committed custom house changes or accept them instead" />
<method proto="cancelediting(Character chr, bool drop_changes)" returns="true/error" desc="Stops editing mode. If drop_changes is true, drops all non committed changes" />
</class>


<class name="Door">
<parent>Lockable</parent>
<explain>A door item that automatically closes.</explain>
<member mname="isopen" type="Boolean" access="r/o" mdesc="true if the door is open" />

<method proto="open()" returns="true" desc="opens the door" />
<method proto="close()" returns="true" desc="closes the door" />
<method proto="toggle()" returns="true" desc="toggles the door to the other state" />
</class>


<class name="Account">
<explain>Object describing a player's game account</explain>
<member mname="name" type="String" access="r/o" mdesc="the name of the account" />
<member mname="enabled" type="Boolean" access="r/o" mdesc="true if enabled" />
<member mname="banned" type="Boolean" access="r/o" mdesc="true if banned" />
<member mname="usernamepasswordhash" type="String" access="r/o" mdesc="MD5 username+password hash string" />
<member mname="uo_expansion" type="String" access="r/o" mdesc="used uo-expansion" />
<member mname="defaultcmdlevel" type="Integer" access="r/o" mdesc="the number for the accounts default command level" />

<method proto="addcharacter(index)" returns="nothing/error" desc="If Index is 0 (.AddCharacter(0)), it will find the next available slot on the account. (Otherwise pass 1-5) Will create a naked, uncolored, male character named 'new character' at 1, 1, 1 on Britannia. No scripts are ran for this method of character creation. Edit this new character via the script creating it." />
<method proto="ban()" returns="true" desc="bans the account" />
<method proto="unban()" returns="true" desc="unbans the account" />
<method proto="enable()" returns="true" desc="enables the account" />
<method proto="disable()" returns="true" desc="disables the account" />
<method proto="setpassword(string newpass)" returns="true/error" desc="sets the account password to newpass" />
<method proto="checkpassword(string pass)" returns="boolean/error" desc="returns true if 'pass' is the account's password" />
<method proto="setname(string newname, string newpass)" returns="true/error" desc="sets the account name to newname, password to newpass. The parameter newpass is only optional if you have clear text passwords (RetainCleartextPasswords) - which you shouldn't." />
<method proto="getcharacter(integer slot)" returns="true/OfflineCharacterRef" desc="gets an OfflineCharacterRef for the character in slot 'slot'. returns error if not character in that slot (1..5)" />
<method proto="deletecharacter(integer slot) " returns="true/error" desc="Deletes character in slot 'slot'. returns error if not character in that slot (1..5)" />
<method proto="delete()" returns="true/error" desc="Delete this empty account." />
<method proto="split(string newacctname, integer slot)" returns="AccountRef/error" desc="Create a new account and move character to it. On success returns a reference to the new account." />
<method proto="move_char(string destacctname, integer slot)" returns="true/error" desc="Move character from this account to destination account. You can use it to flip chars on same account too." />
<method proto="getprop(string propname)" returns="true/error" desc="GetObjProperty for account objects." />
<method proto="setprop(string propname, propval)" returns="true" desc="SetObjProperty for account objects." />
<method proto="eraseprop(string propname)" returns="true" desc="EraseObjProperty for account objects." />
<method proto="propnames()" returns="Array" desc="returns an array of cprop names on this account" />
<method proto="set_uo_expansion(string expansion)" returns="true/error" desc="This determines what flag is sent with packet 0xB9 during login (Nothing -> 0x0000 / T2A -> 0x0001 / LBR -> 0x0002 / AOS -> 0x801b / SE -> 0x805b / ML -> 0x80db / KR -> 0x86DB / SA -> 0x187DF / HSA -> 0x387DF / TOL -> 0x7387DF). It's possible to hook 0xB9 but don't forget to set_uo_expansion anyway because core uses this for internal flags (e.g. AoS Tooltips). The servspecopt.cfg UOFeatureEnable is used with packet 0xA9 and is currently global to all clients. Recognized values: TOL, HSA, SA, KR, ML, SE, AOS, LBR, T2A (default)." />
<method proto="setdefaultcmdlevel(integer number)" returns="true/error" desc="Set the account's default command level." />
<method desc="Gets the value of the built-in member 'membername'. var objname := obj.get_member(&quot;name&quot;) is the same as var objname := obj.name" proto="get_member(string membername)" returns="object, value of member or error" />
</class>


<class name="Lockable">
<parent>Item</parent>
<child>Door</child>
<child>Container</child>
<explain>Class containing concrete subclasses which can 'lock'</explain>
<member mname="locked" type="Boolean" access="r/w" mdesc="true if the item is locked" />
</class>


<class name="Corpse">
<parent>Container</parent>
<explain>Objects that are created when character objects are killed</explain>
<member mname="corpsetype" type="Integer" access="r/o" mdesc="ObjType of the Character killed" />
<member mname="ownerserial" type="Integer" access="r/o" mdesc="Serial of the Mobile that died" />
</class>


<class name="Equipment">
<parent>Item</parent>
<child>Weapon</child>
<child>Armor</child>
<explain>Class containing concrete subclasses which are equipable and have hit points</explain>
<member mname="intrinsic" type="Boolean" access="r/o" mdesc="Intrinsic Equipment?" />
</class>


<class name="Weapon">
<parent>Equipment</parent>
<explain>Equipable items that deal damage in combat</explain>
<member mname="dmg_mod" type="Integer" access="r/w" mdesc="Damage Modifier" />
<member mname="speed_mod" type="Integer" access="r/w" mdesc="from -32768 to 32767, an optional way to delay if you want to use the default speed math and just add to that" />
<member mname="attribute" type="String" access="r/o" mdesc="Attribute name this weapon uses as a skill" />
<member mname="hitscript" type="String" access="r/w" mdesc="Script name that runs when weapon makes a hit" />
</class>


<class name="Container">
<parent>Lockable</parent>
<child>Corpse</child>
<child>Spellbook</child>
<explain>Items that can be locked, and have other items inside them</explain>
<member mname="max_items_mod" type="Integer" access="r/w" mdesc="from -32768 to 32767, modifier for max items allowed in the container" />
<member mname="max_weight_mod" type="Integer" access="r/w" mdesc="from -32768 to 32767, modifier for max weight allowed in the container" />
<member mname="max_slots_mod" type="Integer" access="r/w" mdesc="from -32768 to 32767, modifier for max slots allowed in the container" />
<member mname="no_drop_exception" type="Boolean" access="r/w" mdesc="defines if npc is a valid target even if no_drop is set for the item" />
</class>


<class name="Multi">
<parent>Item</parent>
<child>House</child>
<child>Boat</child>
<explain>Special items that display as many pieces of a large structure, as defined in multi.cfg</explain>
<member mname="footprint" type="Struct" access="r/o" mdesc="returns a struct with 'xmin', 'xmax', 'ymin', 'ymax' of the world coordinates the multi occupies." />
</class>


<class name="Armor">
<parent>Equipment</parent>
<explain>Equipable items that protect against damage in combat</explain>
<member mname="ar_mod" type="Integer" access="r/w" mdesc="Armor factor modifier" />
<member mname="ar" type="Integer" access="r/o" mdesc="Modified armor factor" />
<member mname="ar_base" type="Integer" access="r/o" mdesc="Base armor factor (as in itemdesc.cfg)" />
<member mname="onhitscript" type="String" access="r/w" mdesc="Script name that runs when armor is hit" />
</class>


<class name="Polcore">
<explain>Object containing server data</explain>
<member mname="itemcount" type="Integer" access="r/o" mdesc="Total Item Count" />
<member mname="mobilecount" type="Integer" access="r/o" mdesc="Total Mobile Count" />
<member mname="uptime" type="Integer" access="r/o" mdesc="Uptime in seconds" />
<member mname="sysload" type="Integer" access="r/o" mdesc="System Load" />
<member mname="sysload_severity" type="Integer" access="r/o" mdesc="System Load Severity" />
<member mname="bytes_sent" type="Double" access="r/o" mdesc="Number of bytes sent to clients" />
<member mname="bytes_received" type="Double" access="r/o" mdesc="Number of bytes received from clients" />
<member mname="version" type="Integer" access="r/o" mdesc="Version, i.e. 95" />
<member mname="systime" type="Integer" access="r/o" mdesc="UNIX time()" />
<member mname="events_per_min" type="Integer" access="r/o" mdesc="Events per minute" />
<member mname="skill_checks_per_min" type="Integer" access="r/o" mdesc="Skill checks per minute" />
<member mname="combat_operations_per_min" type="Integer" access="r/o" mdesc="Combat operations per minute" />
<member mname="error_creations_per_min" type="Integer" access="r/o" mdesc="Script errors per minute" />
<member mname="tasks_ontime_per_min" type="Integer" access="r/o" mdesc="Tasks ontime per minute" />
<member mname="tasks_late_per_min" type="Integer" access="r/o" mdesc="Tasks late per minute" />
<member mname="tasks_late_ticks_per_min" type="Integer" access="r/o" mdesc="Tasks late ticks per minute" />
<member mname="scripts_late_per_min" type="Integer" access="r/o" mdesc="Scripts late per minute" />
<member mname="scripts_ontime_per_min" type="Integer" access="r/o" mdesc="Scripts on time per minute" />
<member mname="instr_per_min" type="Integer" access="r/o" mdesc="Script instructions per minute" />
<member mname="priority_divide" type="Integer" access="r/o" mdesc="Priority Divide" />
<member mname="verstr" type="String" access="r/o" mdesc="Version String" />
<member mname="compiledate" type="String" access="r/o" mdesc="Compile Date" />
<member mname="compiletime" type="String" access="r/o" mdesc="Compile Time" />
<member mname="packages" type="Array" access="r/o" mdesc="Array of enabled package names" />
<member mname="running_scripts" type="Array" access="r/o" mdesc="Array of running script objects" />
<member mname="all_scripts" type="Array" access="r/o" mdesc="Array of all cached script objects" />
<member mname="script_profiles" type="Array" access="r/o" mdesc="Array of structs: struct have members name, instr, invocations, instr_per_invoc, instr_percent" />
<member mdesc="struct of arrays of structs - iostats[&quot;sent&quot;array-&gt;256 elements of struct[&quot;count&quot;,&quot;bytes&quot;],&quot;received&quot;array-&gt;256 elements of struct[&quot;count&quot;,&quot;bytes&quot;]]" mname="iostats" access="r/o" type="Integer" />
<member mname="queued_iostats" type="Array" access="r/o" mdesc="structure same as iostats, but for queued I/O stats" />
<member mname="pkt_status" type="Array" access="r/o" mdesc="returns and array of info structures about packets currently in the queue" />
<member mname="memory_usage" type="Integer" access="r/o" mdesc="current process usage in KB" />

<method proto="log_profile(bool clear)" returns="true/false" desc="Writes the script profile to the log, optionally clearing it after." />
<method proto="set_priority_divide(int divide)" returns="true/false" desc="Sets the priority divide to 'divide'" />
<method proto="clear_script_profile_counters()" returns="true/false" desc="Clears the script profile counters"/>
<!-- internal() method is useful for crashing the server... that's funny but it should probably be left undocumented ;) -->
</class>

<class name="Datafile">
<explain>Object representing a data file in a data store</explain>
<method proto="CreateElement(key)" returns="error/DataFileElemRef" desc="key is int or string, depending on datafile flags" />
<method proto="FindElement(key)" returns="error/DataFileElemRef" desc="see key notes above" />
<method proto="DeleteElement(key)" returns="error/true" desc="see key notes above"/>
<method proto="Keys()" returns="array" desc="array of ints or strings, depending on datafile flags"/>
</class>


<class name="DataFileElement">
<explain>A data element inside a datastore file</explain>
<method proto="GetProp(string propname)" returns="script object/error" desc="Returns an unpacked script object (i.e. int,string,array,etc)" />
<method proto="SetProp(string propname, object propvalue)" returns="true/error" desc="Sets a packable object to a property" />
<method proto="EraseProp(string propname)" returns="true/error" desc="Erases the property named 'propname'" />
<method proto="PropNames()" returns="array" desc="Returns an array of property name strings" />
</class>


<class name="Script">
<explain>Object representing a script in the system</explain>
<member mname="pid" type="Integer" access="r/o" mdesc="Process ID" />
<member mname="name" type="String" access="r/o" mdesc="Script name" />
<member mname="state" type="String" access="r/o" mdesc="Script state" />
<member mname="instr_cycles" type="Integer" access="r/o" mdesc="Instruction Cycles" />
<member mname="sleep_cycles" type="Integer" access="r/o" mdesc="Sleep Cycles" />
<member mname="consec_cycles" type="Integer" access="r/o" mdesc="Consecutive Cycles" />
<member mname="pc" type="Integer" access="r/o" mdesc="Program Counter" />
<member mname="call_depth" type="Integer" access="r/o" mdesc="Call depth" />
<member mname="num_globals" type="Integer" access="r/o" mdesc="Number of global variables" />
<member mname="var_size" type="Integer" access="r/o" mdesc="Estimated size of global variables and current local variables" />
<member mname="globals" type="Dictionary" access="r/o" mdesc="Dictionary of global variable name=>value pairs" />
<member mname="attached_to" type="Object" access="r/o" mdesc="Mobile or Item where Script is attached to.
If it's attached to a Character, it will return the Character.
If it's an AI-Script it will return the NPC.
If it's a ControlScript it will return the Item.
Checks are made in the order above." />
<member mname="controller" type="MobileRef" access="r/o" mdesc="Mobile which is responsible for damage etc." />

<method proto="sendevent(obj event)" returns="error/true" desc="sends a event to this script (usually a struct)" />
<method proto="kill()" returns="true" desc="Kills this script" />
<method proto="loadsymbols()" returns="Boolean" desc="Loads the .dbg file" />
<method proto="clear_event_queue()" returns="true" desc="clears the event queue of the script"/>
<method desc="Gets the value of the built-in member 'membername'. var objname := obj.get_member(&quot;name&quot;) is the same as var objname := obj.name" proto="get_member(string membername)" returns="object, value of member or error" />
</class>


<class name="Guild">
<explain>Object representing a player guild association</explain>
<member mname="members" type="Array" access="r/o" mdesc="Array of Character Refs who are guild members" />
<member mname="allyguilds" type="Array" access="r/o" mdesc="Array of GuildRefs who are allied guilds" />
<member mname="enemyguilds" type="Array" access="r/o" mdesc="Array of GuildRefs who are enemy guilds" />
<member mname="guildid" type="Integer" access="r/o" mdesc="Guild ID number" />

<method proto="ismember(Character)" returns="error/true" desc="true if the character is a member of the guild" />
<method proto="isallyguild(GuildRef)" returns="true/error" desc="true if the guild is an ally" />
<method proto="isenemyguild(GuildRef)" returns="true/error" desc="true if the guild is an enemy"/>
<method proto="addmember(CharacterRef)" returns="true/error" desc="adds a character to the guild" />
<method proto="addallyguild(GuildRef)" returns="true/error" desc="adds an ally guild" />
<method proto="addenemyguild(GuildRef)" returns="true/error" desc="adds an enemy guild" />
<method proto="removemember(CharacterRef)" returns="true/error" desc="removes a character member" />
<method proto="removeallyguild(GuildRef)" returns="true/error" desc="removes an ally guild" />
<method proto="removeenemyguild(GuildRef)" returns="true/error" desc="removes an enemy guild" />
<method proto="getprop(string propname)" returns="script object/error" desc="Returns an unpacked script object (i.e. int,string,array,etc)" />
<method proto="setprop(string propname, object propval)" returns="true/error" desc="Sets a packable object to a property." />
<method proto="eraseprop(string propname)" returns="true/error" desc="Erases the property named 'propname'." />
<method proto="propnames()" returns="Array" desc="Returns an array of property name strings." />
</class>


<class name="Dictionary">
<explain>Data structure for key->value pairs (i.e."associative array"). Keys may be intgers, strings, reals, mobrefs, or itemrefs.
Declare with var d := dictionary.
Pre-intialize with var d := dictionary { "abx" -> 72, "xyz" -> 32 };</explain>
<method proto="size()" returns="int" desc="number of pairs in dictionary" />
<method proto="erase(key)" returns="true/error" desc="erases a pair from the dict" />
<method proto="insert(key, value)" returns="error/int" desc="inserts a pair into the dict, returns new size"/>
<method proto="exists(key)" returns="error/int" desc="if exists, returns count of matching key"/>
<method proto="keys()" returns="array" desc="returns an array of the keys" />
<method proto="[key]" returns="value" desc="gets value at key, or uninit if key doesn't exist" />
</class>


<class name="Array">
<explain>Data structure for linear storage, dynamically resizes to fit more elements.
Declare with var a := array;
Pre-intialize with var a := array { 53, 76, 32 };</explain>
<method proto="exists(index)" returns="error/int" desc="Returns 1 if index is in array." />
<method proto="size()" returns="int" desc="number of elements in the array" />
<method proto="erase(int index)" returns="true/false" desc="erases the element at index" />
<method proto="insert(int index, object)" returns="void/error" desc="inserts a new object into the array at index"/>
<method proto="shrink(index)" returns="true/error" desc="erases index to end of array"/>
<method proto="append(object)" returns="true/error" desc="inserts object in the end of the array" />
<method proto="reverse()" returns="true" desc="reverses the elements of the array" />
<method proto="sort(int sub_index:=0)" returns="true/error" desc="sorts the elements of the array, or if sub_index is given sorts array of arrays using the given index for sorting" />
<method proto="+ array" returns="array" desc="concatinates 2 arrays" />
<method proto="randomentry()" returns="value/error" desc="returns random array entry" />
<method proto="cycle([int count])" returns="true/error" desc="will move array [count] steps backwards or forwards in-place as it were a conveyor belt. {1, 2, 3}.cycle() Will make it: {3, 1, 2}. Accepts a negative value as a shift to move different direction" />
<method proto="sorted_insert(obj, sub_index:=0, reverse:=0)" returns="true/error" desc="Inserts obj into already sorted array. sub_index and reverse parameter have to match the sorting criteria of the array." />
</class>


<class name="AuxConnection">
<explain>An object passed to an Aux Service Script that allows the script to transmit and recieve packed data over a TCP/IP port. use wait_for_event() in the service script to recieve data. </explain>
<member mname="ip" type="String" access="r/o" mdesc="Originating IP on the AuxConnection Pipe" />

<method proto="transmit(object o)" returns="error/0" desc="Transmits the packable object 'o' over the Aux connection." />
</class>


<class name="Error">
<explain>An object representing a script error.
Comparing this object against the keyword 'error' allows the scripter to know if the result of a core function was an error.
It always evaluates as false in boolean contexts.
Declare with var e := error;
Pre-intialize with var e := error { errortext := "error message" };</explain>
<member mname="errortext" type="String" access="r/w" mdesc="Informational Error string" />
</class>


<class name="String">
<explain>An ordered collection of ascii (1-byte) characters.
Declare and pre-initialize with var s := "my string"</explain>
<method desc="'Substring': returns a new string from the character range between start and length, inclusive. Returns error if index out of range. Ex: var str := &quot;yomama&quot;; str[2,3] would return &quot;oma&quot;." proto="[start,length]" returns="string" />
<method proto="[substr]" returns="string/uninit" desc="seaches the string for 'substr'. If found, returns the first character of the substring, else uninitialized object. " />
<method proto="[substr] := replace_str" returns="string" desc="finds the first occurance of 'substr' and replaces substr with 'replace_str'. returns the new string."/>
<method proto="+ string" returns="string" desc="concatenates the strings, returns the new string."/>
<method proto="length()" returns="int" desc="returns number of characters in the string"/>
<method proto="find(search,[start])" returns="int" desc="returns like Find(string, search, start) the index of the first occurance of 'search' after 'start' within str, but unlike the basic.em function the Start parameter is optional if not given it searches the whole string"/>
<method proto="upper()" returns="string" desc="returns like upper(str) the uppercase version and also modifies the str"/>
<method proto="lower()" returns="string" desc="returns like lower(str) the lowercase version and also modifies the str"/>
<method proto="format(args)" returns="string" desc="formats a string using the data from args.
	Accepts the following format:
	{:x} for hex representation
	{:o} for octal
	{:b} for binary

	Add a # to get notation prefix, e.g.:
	&quot;{:x}&quot;.format(10) -> &quot;a&quot;
	&quot;{:#x}&quot;.format(10) -> &quot;0xa&quot;

	Parameters can be simple:
	&quot;You have {} gold coins&quot;.format(120) -> &quot;You have 120 gold coins&quot;

	and are unpacked implicitly by their order:
	&quot;{} hits {} for {} of damage&quot;.format(&quot;John&quot;, &quot;Bob&quot;, 120) -> &quot;John hits Bob for 120 of damage&quot;

	However you can specify parameters explicitly (first argument is at 1):
	&quot;You hit {2} for {1} damage&quot;.format(120, &quot;John Doe&quot;) -> &quot;You hit John Doe for 120 damage&quot;

	Format allows accessing object members:
	&quot;Spell {1.spell_name} requires reagents: {1.reagents}&quot;.format(struct{spell_name:=&quot;Fire Wrath&quot;, &quot;Ba, Bm, Ga&quot;}) -> &quot;Spell Fire Wrath requires reagents: Ba, Bm, Ga&quot;

	Implicit members also work:
	&quot;{name} you hit level {level}&quot;.format(struct{name:=&quot;Jane Doe&quot;, level:=4}) -> &quot;Jane Doe you hit level 4&quot;

	Character or item members are accessed the same way:
	&quot;{1.name}, your shield {2.desc} has {2.hp} hp&quot;.format(who, who.shield) -> &quot;Admin, your shield Buckler of Death has 150 hp&quot;"/>
<method proto="join(array)" returns="string" desc="returns a string which is the concatenation of the array elements, seperated by str"/>
</class>


<class name="Struct">
<explain>Data structure with explicitly named members (keys). Keys may be only be strings.
Declare with var s := struct;
Pre-intialize with: var s := struct { a := 1, b := 2 };</explain>
<method proto="exists(key)" returns="error/int" desc="if exists, returns count of matching key"/>
<method proto="size()" returns="int" desc="number of keys in the struct" />
<method proto="insert(int index, object)" returns="int/error" desc="inserts a new object into the struct for key. Returns size."/>
<method proto="keys()" returns="array" desc="returns an array of the keys" />
<method proto=".+member" returns="n/a" desc="struct.+member adds a member" />
<method proto=".member" returns="value" desc="gets value of member" />
<method proto="[member]" returns="value" desc="gets value of member ONLY when member is a string! no using integers here like an array."/>
<method proto="erase(key)" returns="error/int" desc="removes given key" />
<method proto=".-member" returns="n/a" desc="struct.-member removes a member" />
<method proto=".?member" returns="int" desc="struct.?member returns count of matching member" />
</class>


<class name="Package">
<explain>Object representing a package in the system</explain>
<member mname="name" type="String" access="r/o" mdesc="Package name" />
<member mname="version" type="String" access="r/o" mdesc="Package version" />
<member mname="supports_http" type="Boolean" access="r/o" mdesc="Does the Package supports www?" />
<member mname="npcdesc" type="Boolean" access="r/o" mdesc="Does the Package hold an own npcdesc.cfg?" />
</class>


<class name="Packet">
<explain>Object representing a binary packet. Print(Packet) returns string of Packet contents.</explain>
<explain>Packets that are pre-character selection will now report a struct to a packethook with the member "ip"</explain>
<method proto="SendPacket(Character)" returns="true/error" desc="Sends this packet to character." />
<method proto="SendAreaPacket(int x, int y, int range, string realm)" returns="integer/error" desc="Sends this packet to all the players in range of x,y. Returns integer number of clients this packet was successfully sent to." />
<method proto="GetSize()" returns="integer" desc="Returns size of packet data in bytes." />
<method proto="GetInt8(int offset)" returns="integer/error" desc="Gets 8-bit (1 byte) value at offset (0-based)." />
<method proto="GetInt16(int offset)" returns="integer/error" desc="Gets 16-bit (2 byte) value at offset (0-based). Automatically converts to Big-Endian." />
<method proto="GetInt32(int offset)" returns="integer/error" desc="Gets 32-bit (4 byte) value at offset (0-based). Automatically converts to Big-Endian." />
<method proto="GetInt16Flipped(int offset)" returns="integer/error" desc="Gets 16-bit (2 byte) value at offset (0-based). Automatically converts to Low-Endian." />
<method proto="GetInt32Flipped(int offset)" returns="integer/error" desc="Gets 32-bit (4 byte) value at offset (0-based). Automatically converts to Low-Endian." />
<method proto="GetString(int offset, int length)" returns="string/error" desc="Gets a string (1-byte characters) at offset (0-based) for length characters." />
<method proto="GetUnicodeString(int offset, int length)" returns="array/error" desc="Gets a 'unicode string' (2-byte characters) at offset (0-based) for length characters (NOT BYTES)." />
<method proto="GetUnicodeStringFlipped(int offset, int length)" returns="array/error" desc="Gets a 'unicode string' (2-byte characters) at offset (0-based) for length characters (NOT BYTES). With Flipped Byte Order (for specific packet support)" />
<method proto="SetSize(int newsize)" returns="integer/error" desc="Sets the new size of the packet, possibly destroying data if packet size was decreased. Updates the encoded size for variable length packets, not allowed for fixed-length packets. Returns the old size of the packet." />
<method proto="SetInt8(int offset, int value)" returns="true/error" desc="Sets an 8-bit (1-byte) value at offset (0-based). If offset is greater than current size, the packet is resized to fit the new data and the encoded size is updated for variable length packets. Resizing is not allowed for fixed-length packets." />
<method proto="SetInt16(int offset, int value)" returns="true/error" desc="Sets an 16-bit (2-byte) value at offset (0-based). If offset is greater than current size, the packet is resized to fit the new data and the encoded size is updated for variable length packets. Resizing is not allowed for fixed-length packets. Automatically converts to Big-Endian." />
<method proto="SetInt32(int offset, int value)" returns="true/error" desc="Sets an 32-bit (4-byte) value at offset (0-based). If offset is greater than current size, the packet is resized to fit the new data and the encoded size is updated for variable length packets. Resizing is not allowed for fixed-length packets. Automatically converts to Big-Endian. NOTE: currently there's a compiler problem setting 0xFFFFFFFF, it gets converted to 0x7FFFFFFF. Use multiple SetInt16 or SetInt8 calls for now." />
<method proto="SetInt16Flipped(int offset, int value)" returns="true/error" desc="Sets an 16-bit (2-byte) value at offset (0-based). If offset is greater than current size, the packet is resized to fit the new data and the encoded size is updated for variable length packets. Resizing is not allowed for fixed-length packets. Automatically converts to Low-Endian." />
<method proto="SetInt32Flipped(int offset, int value)" returns="true/error" desc="Sets an 32-bit (4-byte) value at offset (0-based). If offset is greater than current size, the packet is resized to fit the new data and the encoded size is updated for variable length packets. Resizing is not allowed for fixed-length packets. Automatically converts to Low-Endian. NOTE: currently there's a compiler problem setting 0xFFFFFFFF, it gets converted to 0x7FFFFFFF. Use multiple SetInt16 or SetInt8 calls for now." />
<method proto="SetString(int offset, string string, int nullterminate)" returns="true/error" desc="Sets a string value at offset (0-based). If offset plus length of string is greater than current size, the packet is resized to fit the new data and the encoded size is updated for variable length packets. Resizing is not allowed for fixed-length packets. Set nullterminate to 1 if you want to automatically append a 0 terminator." />
<method proto="SetUnicodeString(int offset, array unicode character, int nullterminate)" returns="true/error" desc="Sets a unicode string at offset (0-based). If offset plus length of string (2*number of members in the array) is greater than current size, the packet is resized to fit the new data and the encoded size is updated for variable length packets. Resizing is not allowed for fixed-length packets. Set nullterminate to 1 if you want to automatically append a double 0 terminator. Unicode strings in eScript are arrays of 2-byte values. See unicode.em for useful functions. CAscZ in basic.em is useful for character sets that use the ascii/ansi standard." />
<method proto="SetUnicodeStringFlipped(int offset, array unicode character, int nullterminate)" returns="true/error" desc="Sets a unicode string at offset (0-based). If offset plus length of string (2*number of members in the array) is greater than current size, the packet is resized to fit the new data and the encoded size is updated for variable length packets. Resizing is not allowed for fixed-length packets. Set nullterminate to 1 if you want to automatically append a double 0 terminator. Unicode strings in eScript are arrays of 2-byte values. See unicode.em for useful functions. CAscZ in basic.em is useful for character sets that use the ascii/ansi standard. With Flipped Byte Order (for specific packet support)" />
</class>


<class name="Party">
<explain>Object representing a player party association</explain>
<member mname="members" type="Array" access="r/o" mdesc="Array of Offline Character Refs who are party members" />
<member mname="candidates" type="Array" access="r/o" mdesc="Array of Offline Character Refs who are party candidates" />
<member mname="leader" type="OfflineCharRef" access="r/o" mdesc="Offline Character Ref of leader" />

<method proto="setleader(CharacterRef)" returns="error/true" desc="sets new leader" />
<method proto="addmember(CharacterRef)" returns="error/true" desc="adds a character to the party" />
<method proto="addcandidate(CharacterRef)" returns="error/true" desc="adds a character to the party as candidate" />
<method proto="removemember(CharacterRef)" returns="true/error" desc="removes a character member" />
<method proto="removecandidate(CharacterRef)" returns="true/error" desc="removes a character candidate" />
<method proto="getprop(string propname)" returns="script object/error" desc="Returns an unpacked script object (i.e. int,string,array,etc)" />
<method proto="setprop(string propname, object propval)" returns="true/error" desc="Sets a packable object to a property." />
<method proto="eraseprop(string propname)" returns="true/error" desc="Erases the property named 'propname'." />
<method proto="propnames()" returns="Array" desc="Returns an array of property name strings." />
</class>


<class name="BinaryFile">
<explain>Object representing a binaryfile.</explain>
<method proto="Close()" returns="integer" desc="Closes the underlying stream." />
<method proto="Size()" returns="integer/error" desc="Returns filesize in bytes." />
<method proto="Seek(int offset, int seekdir)" returns="integer/error" desc="Seeks to position. See file.em constants for seekdir" />
<method proto="Tell()" returns="integer/error" desc="Returns current position." />
<method proto="Peek()" returns="integer/error" desc="Reads and returns the next byte without extracting it (-1 if eof is reached)." />
<method proto="Flush()" returns="integer" desc="Writes all unwritten chars from buffer to file." />
<method proto="GetInt8()" returns="integer/error" desc="Gets unsigned 8-bit (1 byte) value." />
<method proto="GetInt16()" returns="integer/error" desc="Gets unsigned 16-bit (2 byte) value." />
<method proto="GetInt32()" returns="integer/error" desc="Gets unsigned 32-bit (4 byte) value." />
<method proto="GetSInt8()" returns="integer/error" desc="Gets signed 8-bit (1 byte) value." />
<method proto="GetSInt16()" returns="integer/error" desc="Gets signed 16-bit (2 byte) value." />
<method proto="GetSInt32()" returns="integer/error" desc="Gets signed 32-bit (4 byte) value." />
<method proto="GetString(int length)" returns="string/error" desc="Gets a string (1-byte characters) for length characters." />
<method proto="SetInt8()" returns="1/error" desc="Sets unsigned 8-bit (1 byte) value." />
<method proto="SetInt16()" returns="1/error" desc="Sets unsigned 16-bit (2 byte) value." />
<method proto="SetInt32()" returns="1/error" desc="Sets unsigned 32-bit (4 byte) value." />
<method proto="SetSInt8()" returns="1/error" desc="Sets signed 8-bit (1 byte) value." />
<method proto="SetSInt16()" returns="1/error" desc="Sets signed 16-bit (2 byte) value." />
<method proto="SetSInt32()" returns="1/error" desc="Sets signed 32-bit (4 byte) value." />
<method proto="SetString(string string, int nullterminate)" returns="1/error" desc="Sets a string. Set nullterminate to 1 if you want to automatically append a 0 terminator." />
</class>


<class name="Spellbook">
<parent>Container</parent>
<explain>Object representing a Spellbook.</explain>
<method proto="RemoveSpell(int spellid)" returns="1/0/error" desc="Removes given spellid." />
<method proto="AddSpell(int spellid)" returns="1/0/error" desc="Adds given spellid." />
<method proto="Spells()" returns="array" desc="Returns array of SpellIDs" />
<method proto="HasSpell(int spellid)" returns="1/0/error" desc="Checks if given spellid is inside the spellbook." />
</class>


<class name="Client">
<explain>Object representing a connected client.
The ClientRef is important when having packethooks which are active before characters are selected, when you only have
access to the Client and not the Character.
Because the ClientRef contains most information that was in the Character before, it becomes redundant to have those
methods and properties in the Character and they will be removed in a future release.</explain>
<member mname="acctname" type="Account" access="r/o" mdesc="Account name string (if not NPC)" />
<member mname="ip" type="String" access="r/o" mdesc="IP Address string" />
<member mname="clientversion" type="String" access="r/o" mdesc="UO Client version string" />
<member mname="clientinfo" type="Struct" access="r/o" mdesc="UO Client information struct (check out core-changes.txt for an example)" />
<member mname="clientver_detail" type="Struct" access="r/o" mdesc="UO Client version string as Struct of Ints {major;minor;rev;patch}" />
<member mname="uo_expansion_client" type="Integer" access="r/o" mdesc="client send expansion info flag" />
<member mname="clienttype" type="Integer" access="r/o" mdesc="clientversion type bitfield" />
<member mname="last_activity_at" type="Integer" access="r/o" mdesc="POL clock when last activity has been made" />
<member mname="last_packet_at" type="Integer" access="r/o" mdesc="POL clock when last packet has been received" />
<method proto="compareversion(string Version)" returns="true/false" desc="true if Client Version >= given Versionstring" />
</class>


<class name="StorageAreas">
<explain>Object representing a list of all storage areas.
It is iterable: iterates over StorageArea objects.
It supports the [] operator: its behavior is similar to FindStorageArea()</explain>
<member mname="count" type="Integer" access="r/o" mdesc="Number of storage areas" />
</class>


<class name="StorageArea">
<explain>Object representing a storage area.
It is iterable: iterates over Item objects (root items in storage area).</explain>
<member mname="count" type="Integer" access="r/o" mdesc="Number of root items in this storage area" />
<member mname="totalcount" type="Integer" access="r/o" mdesc="Number of items in this storage area" />
</class>


<class name="FunctionObject">
<explain>Object representing a function. Created via "var f:=@myfunc;"
Object can be copied inside the same script, but cannot be stored in cprops or transfered to a different script.</explain>
<method proto="call(...)" returns="unspecified" desc="Calls the underlying function, arguments and return value are the same as the original function." />
</class>

<class name="Boolean">
<explain>Object representing a boolean value, only comparison operators ==, !=, ! are implemented. Can be stored in cprops/datafiles.</explain>
</class>
</ESCRIPT>
