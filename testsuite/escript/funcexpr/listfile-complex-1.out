0: "" (string) len=0 offset=0x1
1: if false goto 74
2: declare local #0
3: # (consume)
4: local variable #0
5: create-functor index=0 instructions=66 (TOK_FUNCTOR)
    6: pop param byref 'a'
    7: local variable #0
    8: create-functor index=1 instructions=60 (TOK_FUNCTOR)
        9: pop param 'b'
        10: pop param byref 'a'
        11: local variable #1
        12: # (consume)
        13: create-functor index=2 instructions=15 (TOK_FUNCTOR)
            14: pop param 'a'
            15: local variable #0
            16: # (consume)
            17: create-functor index=3 instructions=6 (TOK_FUNCTOR)
                18: declare local #0
                19: # (consume)
                20: local variable #0
                21: # (consume)
                22: 0 (integer) offset=0x6
                23: return
            24: # (consume)
            25: local variable #0
            26: # (consume)
            27: 0 (integer) offset=0xa
            28: return
        29: # (consume)
        30: local variable #1
        31: create-functor index=4 instructions=30 (TOK_FUNCTOR)
            32: pop param 'e'
            33: pop param 'd'
            34: pop param 'c'
            35: pop param byref 'a'
            36: local variable #3
            37: # (consume)
            38: local variable #2
            39: local variable #1
            40: local variable #0
            41: create-functor index=5 instructions=15 (TOK_FUNCTOR)
                42: pop param byref 'c'
                43: pop param byref 'd'
                44: pop param byref 'e'
                45: declare local #0
                46: # (consume)
                47: local variable #3
                48: # (consume)
                49: local variable #0
                50: # (consume)
                51: local variable #1
                52: # (consume)
                53: local variable #2
                54: # (consume)
                55: 0 (integer) offset=0x14
                56: return
            57: # (consume)
            58: local variable #3
            59: # (consume)
            60: 0 (integer) offset=0x18
            61: return
        62: # (consume)
        63: declare local #2
        64: # (consume)
        65: local variable #2
        66: # (consume)
        67: 0 (integer) offset=0x1c
        68: return
    69: # (consume)
    70: 0 (integer) offset=0x20
    71: return
72: # (consume)
73: leave block (remove 1 locals)
74: "listfile-complex-1" (string) len=18 offset=0x24
75: makelocal
76: jsr userfunc @79
77: # (consume)
78: progend
79: pop param 'test'
80: declare local #1
81: "./funcexpr/" (string) len=11 offset=0x3c
82: local variable #0
83: ".lst" (string) len=4 offset=0x48
84: interpolate string (3 parts)
85: call module function (1, 0): ReadFile
86: :=
87: # (consume)
88: local variable #1
89: if true goto 94
90: local variable #1
91: "" (string) len=0 offset=0x1
92: call module function (0, 0): Print
93: return
94: declare local #2
95: "" (string) len=0 offset=0x1
96: :=
97: # (consume)
98: local variable #1
99: initforeach @133
100: local variable #2
101: local variable #3
102: interpolate string (2 parts)
103: "" (string) len=0 offset=0x1
104: call module function (0, 0): Print
105: # (consume)
106: local variable #3
107: " " (string) len=1 offset=0x4d
108: "create-functor" (string) len=14 offset=0x4f
109: interpolate string (2 parts)
110: TOK_ARRAY_SUBSCRIPT
111: if false goto 117
112: local variable #2
113: "    " (string) len=4 offset=0x5e
114: interpolate string (2 parts)
115: local #2 :=
116: goto 133
117: local variable #3
118: " " (string) len=1 offset=0x4d
119: "return" (string) len=6 offset=0x63
120: interpolate string (2 parts)
121: TOK_ARRAY_SUBSCRIPT
122: if false goto 133
123: local variable #2
124: 1 (integer) offset=0x6a
125: local variable #2
126: call-method-id 'length' (#141, 0 arguments)
127: 4 (integer) offset=0x6e
128: -
129: multi subscript get (2 indexes)
130: peek at top of stack; skip 1 instructions if true, otherwise consume it
131: "" (string) len=0 offset=0x1
132: local #2 :=
133: stepforeach @100
134: leave block (remove 3 locals)
135: 0 (integer) offset=0x72
136: return
