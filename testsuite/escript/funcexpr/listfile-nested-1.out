0: "" (string) len=0 offset=0x1
1: if false goto 45
2: declare local #0
3: # (consume)
4: declare local #1
5: # (consume)
6: declare local #2
7: # (consume)
8: local variable #1
9: 1 (integer) offset=0x20
10: create-functor instructions=32
    11: pop param 'a'
    12: local variable #0
    13: 1 (integer) offset=0x18
    14: create-functor instructions=25
        15: pop param 'a'
        16: local variable #0
        17: 1 (integer) offset=0x10
        18: create-functor instructions=18
            19: pop param 'a'
            20: local variable #0
            21: 1 (integer) offset=0x8
            22: create-functor instructions=11
                23: pop param 'a'
                24: local variable #0
                25: # (consume)
                26: local variable #0
                27: # (consume)
                28: local variable #0
                29: # (consume)
                30: local variable #0
                31: # (consume)
                32: 0 (integer) offset=0x4
                33: return
            34: # (consume)
            35: 0 (integer) offset=0xc
            36: return
        37: # (consume)
        38: 0 (integer) offset=0x14
        39: return
    40: # (consume)
    41: 0 (integer) offset=0x1c
    42: return
43: # (consume)
44: leave block (remove 3 locals)
45: "listfile-nested-1" (string) len=17 offset=0x24
46: makelocal
47: jsr userfunc @50
48: # (consume)
49: progend
50: pop param 'test'
51: declare local #1
52: "./funcexpr/" (string) len=11 offset=0x3b
53: local variable #0
54: ".lst" (string) len=4 offset=0x47
55: interpolate string (3 parts)
56: call module function (1, 0): ReadFile
57: :=
58: # (consume)
59: local variable #1
60: if true goto 65
61: local variable #1
62: "" (string) len=0 offset=0x1
63: call module function (0, 0): Print
64: return
65: declare local #2
66: "" (string) len=0 offset=0x1
67: :=
68: # (consume)
69: local variable #1
70: initforeach @104
71: local variable #2
72: local variable #3
73: interpolate string (2 parts)
74: "" (string) len=0 offset=0x1
75: call module function (0, 0): Print
76: # (consume)
77: local variable #3
78: " " (string) len=1 offset=0x4c
79: "create-functor" (string) len=14 offset=0x4e
80: interpolate string (2 parts)
81: TOK_ARRAY_SUBSCRIPT
82: if false goto 88
83: local variable #2
84: "    " (string) len=4 offset=0x5d
85: interpolate string (2 parts)
86: local #2 :=
87: goto 104
88: local variable #3
89: " " (string) len=1 offset=0x4c
90: "return" (string) len=6 offset=0x62
91: interpolate string (2 parts)
92: TOK_ARRAY_SUBSCRIPT
93: if false goto 104
94: local variable #2
95: 1 (integer) offset=0x69
96: local variable #2
97: call-method-id 'length' (#141, 0 arguments)
98: 4 (integer) offset=0x6d
99: -
100: multi subscript get (2 indexes)
101: peek at top of stack; skip 1 instructions if true, otherwise consume it
102: "" (string) len=0 offset=0x1
103: local #2 :=
104: stepforeach @71
105: leave block (remove 3 locals)
106: 0 (integer) offset=0x71
107: return
