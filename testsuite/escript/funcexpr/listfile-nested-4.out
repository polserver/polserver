0: "" (string) len=0 offset=0x1
1: if false goto 45
2: declare local #0
3: # (consume)
4: local variable #0
5: 1 (integer) offset=0x30
6: 0 (integer) offset=0x2
7: create-functor instructions=35
    8: pop param byref 'a'
    9: local variable #0
    10: 1 (integer) offset=0x28
    11: 0 (integer) offset=0x8
    12: create-functor instructions=25
        13: pop param byref 'a'
        14: local variable #0
        15: 1 (integer) offset=0x20
        16: 0 (integer) offset=0xc
        17: create-functor instructions=15
            18: pop param byref 'a'
            19: local variable #0
            20: 1 (integer) offset=0x18
            21: 0 (integer) offset=0x10
            22: create-functor instructions=5
                23: pop param byref 'a'
                24: local variable #0
                25: # (consume)
                26: 0 (integer) offset=0x14
                27: return
            28: # (consume)
            29: local variable #0
            30: # (consume)
            31: 0 (integer) offset=0x1c
            32: return
        33: # (consume)
        34: local variable #0
        35: # (consume)
        36: 0 (integer) offset=0x24
        37: return
    38: # (consume)
    39: local variable #0
    40: # (consume)
    41: 0 (integer) offset=0x2c
    42: return
43: # (consume)
44: leave block (remove 1 locals)
45: "listfile-nested-4" (string) len=17 offset=0x34
46: makelocal
47: jsr userfunc @50
48: # (consume)
49: progend
50: pop param 'test'
51: declare local #1
52: "./funcexpr/" (string) len=11 offset=0x4b
53: local variable #0
54: ".lst" (string) len=4 offset=0x57
55: interpolate string (3 parts)
56: call module function (1, 0): ReadFile
57: :=
58: # (consume)
59: local variable #1
60: if true goto 65
61: local variable #1
62: "" (string) len=0 offset=0x1
63: call module function (0, 0): Print
64: return
65: declare local #2
66: "" (string) len=0 offset=0x1
67: :=
68: # (consume)
69: local variable #1
70: initforeach @104
71: local variable #2
72: local variable #3
73: interpolate string (2 parts)
74: "" (string) len=0 offset=0x1
75: call module function (0, 0): Print
76: # (consume)
77: local variable #3
78: " " (string) len=1 offset=0x5c
79: "create-functor" (string) len=14 offset=0x5e
80: interpolate string (2 parts)
81: TOK_ARRAY_SUBSCRIPT
82: if false goto 88
83: local variable #2
84: "    " (string) len=4 offset=0x6d
85: interpolate string (2 parts)
86: local #2 :=
87: goto 104
88: local variable #3
89: " " (string) len=1 offset=0x5c
90: "return" (string) len=6 offset=0x72
91: interpolate string (2 parts)
92: TOK_ARRAY_SUBSCRIPT
93: if false goto 104
94: local variable #2
95: 1 (integer) offset=0x79
96: local variable #2
97: call-method-id 'length' (#141, 0 arguments)
98: 4 (integer) offset=0x7d
99: -
100: multi subscript get (2 indexes)
101: peek at top of stack; skip 1 instructions if true, otherwise consume it
102: "" (string) len=0 offset=0x1
103: local #2 :=
104: stepforeach @71
105: leave block (remove 3 locals)
106: 0 (integer) offset=0x81
107: return
