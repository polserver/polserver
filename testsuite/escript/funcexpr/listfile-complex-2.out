0: "" (string) len=0 offset=0x1
1: if false goto 70
2: declare local #0
3: # (consume)
4: declare local #1
5: # (consume)
6: declare local #2
7: # (consume)
8: local variable #1
9: local variable #0
10: create-functor index=0 instructions=57 (TOK_FUNCTOR)
    11: pop param byref 'b'
    12: pop param byref 'a'
    13: local variable #0
    14: # (consume)
    15: local variable #1
    16: create-functor index=1 instructions=48 (TOK_FUNCTOR)
        17: pop param 'c'
        18: pop param byref 'a'
        19: local variable #1
        20: local variable #0
        21: create-functor index=2 instructions=36 (TOK_FUNCTOR)
            22: pop param 'b'
            23: pop param byref 'a'
            24: pop param byref 'c'
            25: local variable #1
            26: # (consume)
            27: local variable #2
            28: # (consume)
            29: declare local #1
            30: # (consume)
            31: local variable #3
            32: create-functor index=3 instructions=22 (TOK_FUNCTOR)
                33: pop param byref 'a'
                34: local variable #0
                35: # (consume)
                36: declare local #0
                37: # (consume)
                38: local variable #0
                39: local variable #1
                40: create-functor index=4 instructions=11 (TOK_FUNCTOR)
                    41: pop param 'c'
                    42: pop param byref 'a'
                    43: pop param byref 'b'
                    44: local variable #1
                    45: # (consume)
                    46: local variable #2
                    47: # (consume)
                    48: local variable #0
                    49: # (consume)
                    50: 0 (integer) offset=0x8
                    51: return
                52: # (consume)
                53: 0 (integer) offset=0xc
                54: return
            55: # (consume)
            56: 0 (integer) offset=0x10
            57: return
        58: # (consume)
        59: local variable #1
        60: # (consume)
        61: local variable #0
        62: # (consume)
        63: 0 (integer) offset=0x14
        64: return
    65: # (consume)
    66: 0 (integer) offset=0x18
    67: return
68: # (consume)
69: leave block (remove 3 locals)
70: "listfile-complex-2" (string) len=18 offset=0x1c
71: makelocal
72: jsr userfunc @75
73: # (consume)
74: progend
75: pop param 'test'
76: declare local #1
77: "./funcexpr/" (string) len=11 offset=0x34
78: local variable #0
79: ".lst" (string) len=4 offset=0x40
80: interpolate string (3 parts)
81: call module function (1, 0): ReadFile
82: :=
83: # (consume)
84: local variable #1
85: if true goto 90
86: local variable #1
87: "" (string) len=0 offset=0x1
88: call module function (0, 0): Print
89: return
90: declare local #2
91: "" (string) len=0 offset=0x1
92: :=
93: # (consume)
94: local variable #1
95: initforeach @129
96: local variable #2
97: local variable #3
98: interpolate string (2 parts)
99: "" (string) len=0 offset=0x1
100: call module function (0, 0): Print
101: # (consume)
102: local variable #3
103: " " (string) len=1 offset=0x45
104: "create-functor" (string) len=14 offset=0x47
105: interpolate string (2 parts)
106: TOK_ARRAY_SUBSCRIPT
107: if false goto 113
108: local variable #2
109: "    " (string) len=4 offset=0x56
110: interpolate string (2 parts)
111: local #2 :=
112: goto 129
113: local variable #3
114: " " (string) len=1 offset=0x45
115: "return" (string) len=6 offset=0x5b
116: interpolate string (2 parts)
117: TOK_ARRAY_SUBSCRIPT
118: if false goto 129
119: local variable #2
120: 1 (integer) offset=0x62
121: local variable #2
122: call-method-id 'length' (#141, 0 arguments)
123: 4 (integer) offset=0x66
124: -
125: multi subscript get (2 indexes)
126: peek at top of stack; skip 1 instructions if true, otherwise consume it
127: "" (string) len=0 offset=0x1
128: local #2 :=
129: stepforeach @96
130: leave block (remove 3 locals)
131: 0 (integer) offset=0x6a
132: return
