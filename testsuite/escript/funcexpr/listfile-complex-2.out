0: "" (string) len=0 offset=0x1
1: if false goto 80
2: declare local #0
3: # (consume)
4: declare local #1
5: # (consume)
6: declare local #2
7: # (consume)
8: local variable #1
9: local variable #0
10: 2 (integer) offset=0x40
11: 0 (integer) offset=0x2
12: create-functor instructions=65
    13: pop param byref 'b'
    14: pop param byref 'a'
    15: local variable #0
    16: # (consume)
    17: local variable #1
    18: 1 (integer) offset=0x38
    19: 1 (integer) offset=0xa
    20: create-functor instructions=54
        21: pop param 'c'
        22: pop param byref 'a'
        23: local variable #1
        24: local variable #0
        25: 2 (integer) offset=0x30
        26: 1 (integer) offset=0x10
        27: create-functor instructions=40
            28: pop param 'b'
            29: pop param byref 'a'
            30: pop param byref 'c'
            31: local variable #1
            32: # (consume)
            33: local variable #2
            34: # (consume)
            35: declare local #1
            36: # (consume)
            37: local variable #3
            38: 1 (integer) offset=0x28
            39: 0 (integer) offset=0x14
            40: create-functor instructions=24
                41: pop param byref 'a'
                42: local variable #0
                43: # (consume)
                44: declare local #0
                45: # (consume)
                46: local variable #0
                47: local variable #1
                48: 2 (integer) offset=0x20
                49: 1 (integer) offset=0x18
                50: create-functor instructions=11
                    51: pop param 'c'
                    52: pop param byref 'a'
                    53: pop param byref 'b'
                    54: local variable #1
                    55: # (consume)
                    56: local variable #2
                    57: # (consume)
                    58: local variable #0
                    59: # (consume)
                    60: 0 (integer) offset=0x1c
                    61: return
                62: # (consume)
                63: 0 (integer) offset=0x24
                64: return
            65: # (consume)
            66: 0 (integer) offset=0x2c
            67: return
        68: # (consume)
        69: local variable #1
        70: # (consume)
        71: local variable #0
        72: # (consume)
        73: 0 (integer) offset=0x34
        74: return
    75: # (consume)
    76: 0 (integer) offset=0x3c
    77: return
78: # (consume)
79: leave block (remove 3 locals)
80: "listfile-complex-2" (string) len=18 offset=0x44
81: makelocal
82: jsr userfunc @85
83: # (consume)
84: progend
85: pop param 'test'
86: declare local #1
87: "./funcexpr/" (string) len=11 offset=0x5c
88: local variable #0
89: ".lst" (string) len=4 offset=0x68
90: interpolate string (3 parts)
91: call module function (1, 0): ReadFile
92: :=
93: # (consume)
94: local variable #1
95: if true goto 100
96: local variable #1
97: "" (string) len=0 offset=0x1
98: call module function (0, 0): Print
99: return
100: declare local #2
101: "" (string) len=0 offset=0x1
102: :=
103: # (consume)
104: local variable #1
105: initforeach @139
106: local variable #2
107: local variable #3
108: interpolate string (2 parts)
109: "" (string) len=0 offset=0x1
110: call module function (0, 0): Print
111: # (consume)
112: local variable #3
113: " " (string) len=1 offset=0x6d
114: "create-functor" (string) len=14 offset=0x6f
115: interpolate string (2 parts)
116: TOK_ARRAY_SUBSCRIPT
117: if false goto 123
118: local variable #2
119: "    " (string) len=4 offset=0x7e
120: interpolate string (2 parts)
121: local #2 :=
122: goto 139
123: local variable #3
124: " " (string) len=1 offset=0x6d
125: "return" (string) len=6 offset=0x83
126: interpolate string (2 parts)
127: TOK_ARRAY_SUBSCRIPT
128: if false goto 139
129: local variable #2
130: 1 (integer) offset=0x8a
131: local variable #2
132: call-method-id 'length' (#141, 0 arguments)
133: 4 (integer) offset=0x8e
134: -
135: multi subscript get (2 indexes)
136: peek at top of stack; skip 1 instructions if true, otherwise consume it
137: "" (string) len=0 offset=0x1
138: local #2 :=
139: stepforeach @106
140: leave block (remove 3 locals)
141: 0 (integer) offset=0x92
142: return
