0: "" (string) len=0 offset=0x1
1: if false goto 53
2: declare local #0
3: # (consume)
4: local variable #0
5: create-functor index=0 instructions=45 (TOK_FUNCTOR)
    6: pop param byref 'a'
    7: local variable #0
    8: # (consume)
    9: local variable #0
    10: # (consume)
    11: local variable #0
    12: create-functor index=1 instructions=35 (TOK_FUNCTOR)
        13: pop param byref 'a'
        14: local variable #0
        15: # (consume)
        16: local variable #0
        17: # (consume)
        18: local variable #0
        19: create-functor index=2 instructions=21 (TOK_FUNCTOR)
            20: pop param byref 'a'
            21: local variable #0
            22: # (consume)
            23: local variable #0
            24: # (consume)
            25: local variable #0
            26: create-functor index=3 instructions=7 (TOK_FUNCTOR)
                27: pop param byref 'a'
                28: local variable #0
                29: # (consume)
                30: local variable #0
                31: # (consume)
                32: 0 (integer) offset=0x4
                33: return
            34: # (consume)
            35: local variable #0
            36: # (consume)
            37: local variable #0
            38: # (consume)
            39: 0 (integer) offset=0x8
            40: return
        41: # (consume)
        42: local variable #0
        43: # (consume)
        44: local variable #0
        45: # (consume)
        46: 0 (integer) offset=0xc
        47: return
    48: # (consume)
    49: 0 (integer) offset=0x10
    50: return
51: # (consume)
52: leave block (remove 1 locals)
53: "listfile-nested-2" (string) len=17 offset=0x14
54: makelocal
55: jsr userfunc @58
56: # (consume)
57: progend
58: pop param 'test'
59: declare local #1
60: "./funcexpr/" (string) len=11 offset=0x2b
61: local variable #0
62: ".lst" (string) len=4 offset=0x37
63: interpolate string (3 parts)
64: call module function (1, 0): ReadFile
65: :=
66: # (consume)
67: local variable #1
68: if true goto 73
69: local variable #1
70: "" (string) len=0 offset=0x1
71: call module function (0, 0): Print
72: return
73: declare local #2
74: "" (string) len=0 offset=0x1
75: :=
76: # (consume)
77: local variable #1
78: initforeach @112
79: local variable #2
80: local variable #3
81: interpolate string (2 parts)
82: "" (string) len=0 offset=0x1
83: call module function (0, 0): Print
84: # (consume)
85: local variable #3
86: " " (string) len=1 offset=0x3c
87: "create-functor" (string) len=14 offset=0x3e
88: interpolate string (2 parts)
89: TOK_ARRAY_SUBSCRIPT
90: if false goto 96
91: local variable #2
92: "    " (string) len=4 offset=0x4d
93: interpolate string (2 parts)
94: local #2 :=
95: goto 112
96: local variable #3
97: " " (string) len=1 offset=0x3c
98: "return" (string) len=6 offset=0x52
99: interpolate string (2 parts)
100: TOK_ARRAY_SUBSCRIPT
101: if false goto 112
102: local variable #2
103: 1 (integer) offset=0x59
104: local variable #2
105: call-method-id 'length' (#141, 0 arguments)
106: 4 (integer) offset=0x5d
107: -
108: multi subscript get (2 indexes)
109: peek at top of stack; skip 1 instructions if true, otherwise consume it
110: "" (string) len=0 offset=0x1
111: local #2 :=
112: stepforeach @79
113: leave block (remove 3 locals)
114: 0 (integer) offset=0x61
115: return
