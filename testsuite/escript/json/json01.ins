H:\vs_workspace\Distro\scripts\json.src, Line 2
program main()
var expr := struct{ 
0: decl local #0
1: struct
2: "hello there"
3: addmember-assign(a)
4: 1L
5: Func(0,0): Boolean
6: addmember-assign(b)
7: array
8: 0L
9: Func(0,0): Boolean
10: init{}
11: "u"
12: Func(0,1): Unpack
13: init{}
14: addmember-assign(c)
15: struct
16: "value"
17: addmember-assign(key)
18: addmember-assign(d)
19: :=
20: #
var json := PackJSON(expr);
21: decl local #1
22: local #0
23: Func(0,2): PackJSON
24: :=
25: #
var obj := UnpackJSON(json);
26: decl local #2
27: local #1
28: Func(0,3): UnpackJSON
29: :=
30: #
print(TypeOfInt(obj) == OT_STRUCT);
31: local #2
32: Func(0,4): TypeOfInt
33: 10L
34: ==
35: Func(1,0): Print
36: #
print(obj.size() == 4);
37: local #2
38: Call Method id size (#48, 0 params)
39: 4L
40: ==
41: Func(1,0): Print
42: #
print(obj.a == "hello there");
43: local #2
44: get member 'a'
45: "hello there"
46: ==
47: Func(1,0): Print
48: #
print(obj.b == Boolean(1));
49: local #2
50: get member 'b'
51: 1L
52: Func(0,0): Boolean
53: ==
54: Func(1,0): Print
55: #
print(obj.c[1] == Boolean(0));
56: local #2
57: get member 'c'
58: 1L
59: [] 1
60: 0L
61: Func(0,0): Boolean
62: ==
63: Func(1,0): Print
64: #
print(obj.c[2] == Unpack("u"));
65: local #2
66: get member 'c'
67: 2L
68: [] 1
69: "u"
70: Func(0,1): Unpack
71: ==
72: Func(1,0): Print
73: #
print(obj.c.size() == 2);
74: local #2
75: get member 'c'
76: Call Method id size (#48, 0 params)
77: 2L
78: ==
79: Func(1,0): Print
80: #
print(TypeOfInt(obj.d) == OT_STRUCT);
81: local #2
82: get member 'd'
83: Func(0,4): TypeOfInt
84: 10L
85: ==
86: Func(1,0): Print
87: #
print(obj.d.size() == 1);
88: local #2
89: get member 'd'
90: Call Method id size (#48, 0 params)
91: 1L
92: ==
93: Func(1,0): Print
94: #
print(obj.d.key == "value");
95: local #2
96: get member 'd'
97: get member 'key'
98: "value"
99: ==
100: Func(1,0): Print
101: #
102: leave block(3)
103: progend
