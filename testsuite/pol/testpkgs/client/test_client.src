use os;
use uo;
use attributes;
use vitals;

include "testutil";

var char;
var backpack;

var clientcon;
var testclient:=GetEnvironmentVariable("POLCORE_TESTCLIENT")=="TRUE";
program chartests()
  if (!testclient)
    syslog("NO CLIENT TESTS");
    return 1;
  endif
  var a:=FindAccount("testclient");
  char:=a.getcharacter(1);
  if (!char)
    return ret_error("Could not find char at slot 1");
  endif
  if (char.backpack)
    DestroyItem(char.backpack);
  endif
  backpack:=CreateItemAtLocation(0,0,0,0xE75);
  var res:=EquipItem(char,backpack);
  if (!res)
    return ret_error("Failed to equip backpack "+backpack+" "+res);
  endif
  setAttributeBaseValue(char,"STR",1000);
  setAttributeBaseValue(char,"INT",1000);
  setAttributeBaseValue(char,"DEX",1000);

  var i:=1;
  while (1)
    res := OpenConnection("127.0.0.1",50000,"clientconnection",GetProcess(),1,1);
    if (res)
      break;
    endif
    sleep(1);
    ++i;
    if (i>10)
      return ret_error("Failed to connect to testclient");
    endif
  endwhile
  while (1)
    res:=GetGlobalProperty("#clientcon");
    if (res)
      clientcon:=GetProcess(res);
      break;
    endif
    sleepms(5);
  endwhile
  i:=0;
  while (1)
    if (char.client)
      print("TESTSUITE: client connected");
      break;
    endif
    if (i>500)
      return ret_error("Client did not connect");
    endif
    sleepms(10);
  endwhile
  print(recalcVitals(char));
  print(getVitalMaximumValue(char,"Hits"));

  setVital(char, "Hits", getVitalMaximumValue(char,"Hits"));
  setVital(char, "Mana", getVitalMaximumValue(char,"Mana"));
  setVital(char, "Stamina", getVitalMaximumValue(char,"Stamina"));
  return 1;
endprogram


exported function say_something()
  if (!testclient)
    return 1;
  endif
  Clear_Event_Queue();
  clientcon.sendevent(struct{todo:="speech", arg:="Hello Test"});
  while (1)
    var ev:=Wait_For_Event(5);
    if (!ev)
      return ret_error("no signal received");
    endif
    if (ev.?speech)
      syslog(ev);
      if (ev.speech=="Hello Test")
        break;
      endif
    endif
  endwhile
  return 1;
endfunction

exported function move_turn_water()
  if (!testclient)
    return 1;
  endif
  MoveObjectToLocation(char, 1,1,1,flags:=MOVEOBJECT_FORCELOCATION);
  char.facing:=1;
  Clear_Event_Queue();
  clientcon.sendevent(struct{todo:="move",arg:=6});
  while (1)
    var ev:=Wait_For_Event(5);
    if (!ev)
      return ret_error("no signal received");
    endif
    if (ev.?move)
      syslog(ev);
      if (!ev.move)
        return ret_error("failed to turn");
      endif
      break;
    endif
  endwhile
  clientcon.sendevent(struct{todo:="move",arg:=6});
  while (1)
    var ev:=Wait_For_Event(5);
    if (!ev)
      return ret_error("no signal received");
    endif
    if (ev.?move)
      syslog(ev);
      if (ev.move)
        return ret_error("move in water succeeded");
      endif
      break;
    endif
  endwhile
  return 1;
endfunction

exported function move_ground()
  if (!testclient)
    return 1;
  endif
  MoveObjectToLocation(char, 100,100,1,flags:=MOVEOBJECT_FORCELOCATION);
  char.facing:=1;
  Clear_Event_Queue();
  clientcon.sendevent(struct{todo:="move",arg:=1});
  while (1)
    var ev:=Wait_For_Event(5);
    if (!ev)
      return ret_error("no signal received");
    endif
    if (ev.?move)
      syslog(ev);
      if (!ev.move)
        return ret_error("failed to move");
      endif
      break;
    endif
  endwhile
  return 1;
endfunction
