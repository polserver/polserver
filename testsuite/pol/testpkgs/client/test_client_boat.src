use os;
use uo;
use boat;

include "testutil";
include "communication";

var char;
var char2;
var boat;

var clientcon := getClientConnection();

program chartests()
  var a:=FindAccount("testclient0");
  char:=a.getcharacter(1);
  if (!char)
    return ret_error("Could not find char at slot 1");
  endif
  a:=FindAccount("testclient1");
  char2:=a.getcharacter(1);
  if (!char2)
    return ret_error("Could not find char2 at slot 1");
  endif
  boat:=CreateMultiAtLocation(10,50,-4,0x11000, CRMULTI_FACING_EAST);
  if (!boat)
    return ret_error("Failed to create boat "+boat);
  endif
  var h:=getstandingheight(11,50, boat.z, boat.realm);
  MoveObjectToLocation(char, 11,50,h.z);
  while (1)
    var ev:=waitForClient(0, {EVT_NEW_SUBSERVER});
    if (ev)
      break;
    endif
  endwhile
endprogram

exported function move_boat()
  print(boat.mobiles);
  var res:=boat.mobiles.size()==1;
  clientcon.sendevent(struct{todo:=EVT_SILENT_ITEMS, arg:=1, id:=0});
  sleepms(500);
  var h:=getstandingheight(11,50, boat.z, boat.realm);
  for i:=1 to 8000
    CreateItemAtLocation(11,50,h.z, 0x3e3f, 1, boat.realm);
  endfor
  var itemres := boat.items.size() > 7000;
  var moveres := MoveBoat(boat,0);
  foreach item in (boat.items)
    DestroyItem(item);
  endforeach
  MoveObjectToLocation(char, 1,1,1,flags:=MOVEOBJECT_FORCELOCATION);
  while (1) // sync point
    var ev:=waitForClient(0, {EVT_NEW_SUBSERVER});
    if (ev)
      break;
    endif
  endwhile
  clientcon.sendevent(struct{todo:=EVT_SILENT_ITEMS, arg:=0, id:=1});
  Clear_Event_Queue();
  DestroyMulti(boat);
  if (!res)
    return ret_error("Char not on ship");
  endif
  if (!itemres)
    return ret_error("Not enough items");
  endif
  if (!moveres)
    return ret_error("Failed to move ship {}".format(moveres));
  endif
  return 1;
endfunction

