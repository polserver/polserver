use os;
include "testutil";

program test_env()
  return 1;
endprogram

exported function test_email_simple()
  var res := SendEmail( from := "from@polserver.com", recipient := "to@polserver.com",
                        subject := "Test test_email_simple", body := "This is the body!" );
  return res;
endfunction

exported function test_email_to_array()
  var res := SendEmail( from := "from@polserver.com", recipient := { "to1@polserver.com",
                                                                     "to2@polserver.com" },
                        subject := "Test test_email_to_array",
                        body := "This is the body!" );
  return res;
endfunction

exported function test_email_bcc_only()
  var res := SendEmail( from := "from@polserver.com", recipient := 0, bcc := "bcc@polserver.com",
                        subject := "Test test_email_bcc_only", body := "This is the body!" );
  return res;
endfunction

exported function test_email_bcc_only_array()
  var res := SendEmail( from := "from@polserver.com", recipient := 0, bcc := { "bcc1@polserver.com",
                                                                               "bcc2@polserver.com" },
                        subject := "Test test_email_bcc_only", body := "This is the body!" );
  return res;
endfunction

exported function test_email_content_type()
  var res := SendEmail( from := "from@polserver.com", recipient := "to@polserver.com",
                        subject := "Test test_email_simple", body := "This is the <strong>body</strong>!",
                        content_type := "text/html" );
  return res;
endfunction

exported function test_email_display()
  var res := SendEmail( from := "Sender <from@polserver.com>", recipient := "Recipient <to@polserver.com>",
                        subject := "Test test_email_simple", body := "This is the body!" );
  return res;
endfunction

exported function test_email_bad_ssl_verification( resources )
  // SSL error, as 127.0.0.1 does not match `localhost` in the cert
  var res := resources.UpdateConfiguration( struct{
                                            URL := "smtp://127.0.0.1:1025" },
                                            "::config/email.cfg" );
  if ( !res )
    return res;
  endif

  res := SendEmail( from := "from@polserver.com", recipient := "to@polserver.com",
                    subject := "Test test_email_simple", body := "This is the body!" );

  return ret_error_not_equal( res, error, $"SendEmail did not error: {res}" );
endfunction

exported function test_email_bad_config_url( resources )
  var res := resources.UpdateConfiguration( struct{
                                            URL := "does not start with smtp://" },
                                            "::config/email.cfg" );

  return ret_error_not_equal( res, error, $"ReloadConfiguration did not error: {res}" );
endfunction

exported function test_email_bad_config_cafile( resources )
  var res := resources.UpdateConfiguration( struct{
                                            CAFile := "file-does-not-exist.pem" },
                                            "::config/email.cfg" );

  return ret_error_not_equal( res, error, $"ReloadConfiguration did not error: {res}" );
endfunction

exported function test_email_bad_recipient_to( resources )
  var res := SendEmail( from := dictionary{}, recipient := "Recipient <to@polserver.com>",
                        subject := "Test test_email_simple", body := "This is the body!" );

  return ret_error_not_equal( res, error, $"SendEmail did not error: {res}" );
endfunction

exported function test_email_bad_recipient_bcc( resources )
  var res := SendEmail( from := "from@polserver.com", recipient := 0, bcc := { "Recipient <to@polserver.com>",
                                                                               1 },
                        subject := "Test test_email_simple", body := "This is the body!" );

  return ret_error_not_equal( res, error, $"SendEmail did not error: {res}" );
endfunction
