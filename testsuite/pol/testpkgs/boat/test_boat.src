use uo;
use os;
use boat;

include "testutil";

program test_boat()
  return 1;
endprogram

exported function create()
  var res:=CreateMultiAtLocation(10,50,-4,0x11000, CRMULTI_FACING_EAST);
  if (!res)
    return ret_error("Failed to create boat "+res);
  endif
  if (res.x !=10 || res.y != 50 || res.z != -4 || res.graphic !=0x0)
    var er:="Wrong pos or graphic: {},{},{} {}".format(res.x, res.y, res.z, res.graphic);
    DestroyMulti(res);
    return ret_error(er);
  endif
  for i:=1 to 5
    sleepms(10);
    if (res.getprop("started"))
      DestroyMulti(res);
      return 1;
    endif
  endfor
  DestroyMulti(res);
  return ret_error("Failed to start boat script");
endfunction

exported function create_fail()
  var res:=CreateMultiAtLocation(50,50,-4,0x11000, CRMULTI_FACING_EAST);
  if (res)
    DestroyMulti(res);
    return ret_error("Created boat on ground");
  endif
  return 1;
endfunction

exported function move()
  var res:=CreateMultiAtLocation(10,50,-4,0x11000, CRMULTI_FACING_EAST);
  if (!res)
    return ret_error("Failed to create boat "+res);
  endif
  moveboat(res, 0);
  if (res.x !=10 || res.y != 49 || res.z != -4)
    var er:="Wrong pos: {},{},{}".format(res.x, res.y, res.z);
    DestroyMulti(res);
    return ret_error(er);
  endif
  DestroyMulti(res);
  return 1;
endfunction

exported function test_script_method_syshook()
  var res:=CreateMultiAtLocation(10,50,-4,0x11000, CRMULTI_FACING_EAST);
  if (!res)
    return ret_error("Failed to create boat "+res);
  endif
  var value := res.IsSysHookBoat();
  if (value != 1)
    var er:="Wrong IsSysHookBoat() return value: {}".format(value);
    DestroyMulti(res);
    return ret_error(er);
  endif
  DestroyMulti(res);
  return 1;
endfunction

exported function test_script_method_itemdesc()
  var res:=CreateMultiAtLocation(10,50,-4,0x11001, CRMULTI_FACING_EAST);
  if (!res)
    return ret_error("Failed to create boat "+res);
  endif
  var value := res.IsItemDescBoat();
  if (value != 1)
    var er:="Wrong IsItemDescBoat() return value: {}".format(value);
    DestroyMulti(res);
    return ret_error(er);
  endif
  DestroyMulti(res);
  return 1;
endfunction

exported function test_script_method_both()
  var res:=CreateMultiAtLocation(10,50,-4,0x11001, CRMULTI_FACING_EAST);
  if (!res)
    return ret_error("Failed to create boat "+res);
  endif
  var value := res.WhereDefined();
  if (value != "itemdesc")
    var er:="Wrong WhereDefined() return value: {}".format(value);
    DestroyMulti(res);
    return ret_error(er);
  endif
  DestroyMulti(res);
  return 1;
endfunction

/*exported function test_boat_realm_move()
  // crashed by wrongly converting coordinates between realms
  var boat:=CreateMultiAtLocation(10,50,-4,0x11000, CRMULTI_FACING_EAST);
  if (!boat)
    return ret_error("Failed to create boat "+boat);
  endif

  var res:=MoveObjectToLocation(boat,1580,150,0,"britannia2",MOVEOBJECT_FORCELOCATION);
  if (!res || boat.x != 1580 || boat.y != 150 || boat.realm != "britannia2")
    var err:=$"Failed initial move: {res}:{boat.x},{boat.y},{boat.realm}";
    DestroyMulti(boat);
    return ret_error(err);
  endif

  res:=MoveObjectToLocation(boat,10,10,0,"britannia",MOVEOBJECT_FORCELOCATION);
  if (!res || boat.x != 10 || boat.y != 10 || boat.realm != "britannia")
    var err:=$"Failed to move: {res}:{boat.x},{boat.y},{boat.realm}";
    DestroyMulti(boat);
    return ret_error(err);
  endif

  DestroyMulti(boat);
  return 1;
endfunction*/
